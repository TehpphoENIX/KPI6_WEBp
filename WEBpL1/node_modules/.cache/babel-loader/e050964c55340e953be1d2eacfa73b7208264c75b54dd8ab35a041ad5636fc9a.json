{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar getStyleProperty = require(\"./getStyleProperty\");\n/**\n * @param {DOMNode} element [description]\n * @param {string} name Overflow style property name.\n * @return {boolean} True if the supplied ndoe is scrollable.\n */\n\nfunction _isNodeScrollable(element, name) {\n  var overflow = Style.get(element, name);\n  return overflow === 'auto' || overflow === 'scroll';\n}\n/**\n * Utilities for querying and mutating style properties.\n */\n\nvar Style = {\n  /**\n   * Gets the style property for the supplied node. This will return either the\n   * computed style, if available, or the declared style.\n   *\n   * @param {DOMNode} node\n   * @param {string} name Style property name.\n   * @return {?string} Style property value.\n   */\n  get: getStyleProperty,\n  /**\n   * Determines the nearest ancestor of a node that is scrollable.\n   *\n   * NOTE: This can be expensive if used repeatedly or on a node nested deeply.\n   *\n   * @param {?DOMNode} node Node from which to start searching.\n   * @return {?DOMWindow|DOMElement} Scroll parent of the supplied node.\n   */\n  getScrollParent: function getScrollParent(node) {\n    if (!node) {\n      return null;\n    }\n    var ownerDocument = node.ownerDocument;\n    while (node && node !== ownerDocument.body) {\n      if (_isNodeScrollable(node, 'overflow') || _isNodeScrollable(node, 'overflowY') || _isNodeScrollable(node, 'overflowX')) {\n        return node;\n      }\n      node = node.parentNode;\n    }\n    return ownerDocument.defaultView || ownerDocument.parentWindow;\n  }\n};\nmodule.exports = Style;","map":{"version":3,"names":["getStyleProperty","require","_isNodeScrollable","element","name","overflow","Style","get","getScrollParent","node","ownerDocument","body","parentNode","defaultView","parentWindow","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/fbjs/lib/Style.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\nvar getStyleProperty = require(\"./getStyleProperty\");\n/**\n * @param {DOMNode} element [description]\n * @param {string} name Overflow style property name.\n * @return {boolean} True if the supplied ndoe is scrollable.\n */\n\n\nfunction _isNodeScrollable(element, name) {\n  var overflow = Style.get(element, name);\n  return overflow === 'auto' || overflow === 'scroll';\n}\n/**\n * Utilities for querying and mutating style properties.\n */\n\n\nvar Style = {\n  /**\n   * Gets the style property for the supplied node. This will return either the\n   * computed style, if available, or the declared style.\n   *\n   * @param {DOMNode} node\n   * @param {string} name Style property name.\n   * @return {?string} Style property value.\n   */\n  get: getStyleProperty,\n\n  /**\n   * Determines the nearest ancestor of a node that is scrollable.\n   *\n   * NOTE: This can be expensive if used repeatedly or on a node nested deeply.\n   *\n   * @param {?DOMNode} node Node from which to start searching.\n   * @return {?DOMWindow|DOMElement} Scroll parent of the supplied node.\n   */\n  getScrollParent: function getScrollParent(node) {\n    if (!node) {\n      return null;\n    }\n\n    var ownerDocument = node.ownerDocument;\n\n    while (node && node !== ownerDocument.body) {\n      if (_isNodeScrollable(node, 'overflow') || _isNodeScrollable(node, 'overflowY') || _isNodeScrollable(node, 'overflowX')) {\n        return node;\n      }\n\n      node = node.parentNode;\n    }\n\n    return ownerDocument.defaultView || ownerDocument.parentWindow;\n  }\n};\nmodule.exports = Style;"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACpD;AACA;AACA;AACA;AACA;;AAGA,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,IAAI,EAAE;EACxC,IAAIC,QAAQ,GAAGC,KAAK,CAACC,GAAG,CAACJ,OAAO,EAAEC,IAAI,CAAC;EACvC,OAAOC,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,QAAQ;AACrD;AACA;AACA;AACA;;AAGA,IAAIC,KAAK,GAAG;EACV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAEP,gBAAgB;EAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEQ,eAAe,EAAE,SAASA,eAAeA,CAACC,IAAI,EAAE;IAC9C,IAAI,CAACA,IAAI,EAAE;MACT,OAAO,IAAI;IACb;IAEA,IAAIC,aAAa,GAAGD,IAAI,CAACC,aAAa;IAEtC,OAAOD,IAAI,IAAIA,IAAI,KAAKC,aAAa,CAACC,IAAI,EAAE;MAC1C,IAAIT,iBAAiB,CAACO,IAAI,EAAE,UAAU,CAAC,IAAIP,iBAAiB,CAACO,IAAI,EAAE,WAAW,CAAC,IAAIP,iBAAiB,CAACO,IAAI,EAAE,WAAW,CAAC,EAAE;QACvH,OAAOA,IAAI;MACb;MAEAA,IAAI,GAAGA,IAAI,CAACG,UAAU;IACxB;IAEA,OAAOF,aAAa,CAACG,WAAW,IAAIH,aAAa,CAACI,YAAY;EAChE;AACF,CAAC;AACDC,MAAM,CAACC,OAAO,GAAGV,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar ContentBlock = require(\"./ContentBlock\");\nvar ContentBlockNode = require(\"./ContentBlockNode\");\nvar convertFromHTMLToContentBlocks = require(\"./convertFromHTMLToContentBlocks\");\nvar generateRandomKey = require(\"./generateRandomKey\");\nvar getSafeBodyFromHTML = require(\"./getSafeBodyFromHTML\");\nvar gkx = require(\"./gkx\");\nvar Immutable = require(\"immutable\");\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\nvar List = Immutable.List,\n  Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLToContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.reduce(function (acc, textLine, index) {\n      textLine = sanitizeDraftText(textLine);\n      var key = generateRandomKey();\n      var blockNodeConfig = {\n        key: key,\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      }; // next block updates previous block\n\n      if (experimentalTreeDataSupport && index !== 0) {\n        var prevSiblingIndex = index - 1; // update previous block\n\n        var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n          nextSibling: key\n        });\n        blockNodeConfig = _objectSpread({}, blockNodeConfig, {\n          prevSibling: previousBlock.getKey()\n        });\n      }\n      acc.push(new ContentBlockRecord(blockNodeConfig));\n      return acc;\n    }, []);\n  }\n};\nmodule.exports = DraftPasteProcessor;","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","ContentBlock","require","ContentBlockNode","convertFromHTMLToContentBlocks","generateRandomKey","getSafeBodyFromHTML","gkx","Immutable","sanitizeDraftText","List","Repeat","experimentalTreeDataSupport","ContentBlockRecord","DraftPasteProcessor","processHTML","html","blockRenderMap","processText","textBlocks","character","type","reduce","acc","textLine","index","blockNodeConfig","text","characterList","prevSiblingIndex","previousBlock","merge","nextSibling","prevSibling","getKey","push","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/DraftPasteProcessor.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar convertFromHTMLToContentBlocks = require(\"./convertFromHTMLToContentBlocks\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getSafeBodyFromHTML = require(\"./getSafeBodyFromHTML\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLToContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.reduce(function (acc, textLine, index) {\n      textLine = sanitizeDraftText(textLine);\n      var key = generateRandomKey();\n      var blockNodeConfig = {\n        key: key,\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      }; // next block updates previous block\n\n      if (experimentalTreeDataSupport && index !== 0) {\n        var prevSiblingIndex = index - 1; // update previous block\n\n        var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n          nextSibling: key\n        });\n        blockNodeConfig = _objectSpread({}, blockNodeConfig, {\n          prevSibling: previousBlock.getKey()\n        });\n      }\n\n      acc.push(new ContentBlockRecord(blockNodeConfig));\n      return acc;\n    }, []);\n  }\n};\nmodule.exports = DraftPasteProcessor;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
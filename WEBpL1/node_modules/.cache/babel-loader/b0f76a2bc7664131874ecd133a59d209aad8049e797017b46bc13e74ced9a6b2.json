{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\nvar substr = UnicodeUtils.substr;\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n  return entities;\n}\nmodule.exports = decodeEntityRanges;","map":{"version":3,"names":["UnicodeUtils","require","substr","decodeEntityRanges","text","ranges","entities","Array","length","fill","forEach","range","start","offset","end","ii","key","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/decodeEntityRanges.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UnicodeUtils = require(\"fbjs/lib/UnicodeUtils\");\n\nvar substr = UnicodeUtils.substr;\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEnD,IAAIC,MAAM,GAAGF,YAAY,CAACE,MAAM;AAChC;AACA;AACA;;AAEA,SAASC,kBAAkBA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACxC,IAAIC,QAAQ,GAAGC,KAAK,CAACH,IAAI,CAACI,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAE5C,IAAIJ,MAAM,EAAE;IACVA,MAAM,CAACK,OAAO,CAAC,UAAUC,KAAK,EAAE;MAC9B;MACA;MACA,IAAIC,KAAK,GAAGV,MAAM,CAACE,IAAI,EAAE,CAAC,EAAEO,KAAK,CAACE,MAAM,CAAC,CAACL,MAAM;MAChD,IAAIM,GAAG,GAAGF,KAAK,GAAGV,MAAM,CAACE,IAAI,EAAEO,KAAK,CAACE,MAAM,EAAEF,KAAK,CAACH,MAAM,CAAC,CAACA,MAAM;MAEjE,KAAK,IAAIO,EAAE,GAAGH,KAAK,EAAEG,EAAE,GAAGD,GAAG,EAAEC,EAAE,EAAE,EAAE;QACnCT,QAAQ,CAACS,EAAE,CAAC,GAAGJ,KAAK,CAACK,GAAG;MAC1B;IACF,CAAC,CAAC;EACJ;EAEA,OAAOV,QAAQ;AACjB;AAEAW,MAAM,CAACC,OAAO,GAAGf,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teh_phoENIX\\\\source\\\\repos\\\\WEBp\\\\WEBpL1\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from 'react-router-dom';\nimport './css/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './pages/Main';\nimport View from './pages/View';\nimport PageNotFound from './pages/404';\nimport CreatePage from './pages/Create';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet postArray = {};\nconst getAllPosts = async () => {\n  const jsonData = fetch(`127.0.0.1:1001/posts`, {\n    method: \"GET\"\n  }).then(r => r.json()).then(j => j);\n  console.log(jsonData);\n  return jsonData;\n};\nconst router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Main, {\n      postArray: getAllPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \":id\",\n    loader: _ref => {\n      let {\n        params\n      } = _ref;\n      let found;\n      fetch(`127.0.0.1:1001/posts/${params.id}`).then(response => found = response.json());\n      return found;\n    },\n    element: /*#__PURE__*/_jsxDEV(View, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"create\",\n    element: /*#__PURE__*/_jsxDEV(CreatePage, {\n      creationCallback: newPost => {\n        let id = postArray.length;\n        newPost.id = id;\n        postArray.push(Object.assign({}, newPost));\n        return id;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)]\n}, void 0, true)));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// <React.StrictMode>\n_jsxDEV(RouterProvider, {\n  router: router\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 5\n}, this)\n// </React.StrictMode> */\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","createBrowserRouter","createRoutesFromElements","Route","RouterProvider","reportWebVitals","Main","View","PageNotFound","CreatePage","jsxDEV","_jsxDEV","Fragment","_Fragment","postArray","getAllPosts","jsonData","fetch","method","then","r","json","j","console","log","router","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","loader","_ref","params","found","id","response","creationCallback","newPost","length","push","Object","assign","root","createRoot","document","getElementById","render"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {\n  createBrowserRouter,\n  createRoutesFromElements,\n  Route,\n  RouterProvider,\n} from 'react-router-dom';\n\nimport './css/index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport Main from './pages/Main';\nimport View from './pages/View';\nimport PageNotFound from './pages/404';\nimport CreatePage from './pages/Create';\n\nlet postArray = {} \n\nconst getAllPosts = async () => {\n  const jsonData = fetch(`127.0.0.1:1001/posts`,{\n    method: \"GET\"\n  })\n    .then(r=>r.json())\n    .then(j=>j)\n  console.log(jsonData);\n  return jsonData\n}\n\nconst router = createBrowserRouter(\n  createRoutesFromElements((\n    <>\n    <Route path=\"/\" \n    element={<Main postArray={getAllPosts()} />} />\n    <Route \n      path=\":id\" \n      loader={({params})=>{\n\n        let found\n        fetch(`127.0.0.1:1001/posts/${params.id}`)\n          .then(response=>found = response.json())\n        \n        return found\n      }}\n      element={<View/>}\n    />\n    <Route\n      path=\"create\"\n      element={<CreatePage creationCallback={(newPost)=>{\n        let id = postArray.length\n        newPost.id = id\n        postArray.push(Object.assign({},newPost))\n        return id\n      }}/>}\n    />\n    </>\n  ))\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <RouterProvider router={router} />\n  // </React.StrictMode> */\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
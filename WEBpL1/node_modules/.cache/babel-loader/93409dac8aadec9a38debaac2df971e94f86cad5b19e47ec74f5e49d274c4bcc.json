{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\nvar EditorState = require(\"./EditorState\");\nvar getContentStateFragment = require(\"./getContentStateFragment\");\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\n\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n      if (blockEnd === selection.getAnchorOffset()) {\n        var keyAfter = content.getKeyAfter(anchorKey);\n        if (keyAfter == null) {\n          return editorState;\n        }\n        targetRange = selection.set('focusKey', keyAfter).set('focusOffset', 0);\n      } else {\n        targetRange = selection.set('focusOffset', blockEnd);\n      }\n    } else {\n      targetRange = selection;\n    }\n    targetRange = nullthrows(targetRange); // TODO: This should actually append to the current state when doing\n    // successive ^K commands without any other cursor movement\n\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n    if (afterRemoval === content) {\n      return editorState;\n    }\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;","map":{"version":3,"names":["DraftModifier","require","EditorState","getContentStateFragment","nullthrows","clipboard","SecondaryClipboard","cut","editorState","content","getCurrentContent","selection","getSelection","targetRange","isCollapsed","anchorKey","getAnchorKey","blockEnd","getBlockForKey","getLength","getAnchorOffset","keyAfter","getKeyAfter","set","afterRemoval","removeRange","push","paste","newContent","replaceWithFragment","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/SecondaryClipboard.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentStateFragment = require(\"./getContentStateFragment\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\n\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        var keyAfter = content.getKeyAfter(anchorKey);\n\n        if (keyAfter == null) {\n          return editorState;\n        }\n\n        targetRange = selection.set('focusKey', keyAfter).set('focusOffset', 0);\n      } else {\n        targetRange = selection.set('focusOffset', blockEnd);\n      }\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange); // TODO: This should actually append to the current state when doing\n    // successive ^K commands without any other cursor movement\n\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAElE,IAAIG,UAAU,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAE/C,IAAII,SAAS,GAAG,IAAI;AACpB;AACA;AACA;AACA;;AAEA,IAAIC,kBAAkB,GAAG;EACvBC,GAAG,EAAE,SAASA,GAAGA,CAACC,WAAW,EAAE;IAC7B,IAAIC,OAAO,GAAGD,WAAW,CAACE,iBAAiB,EAAE;IAC7C,IAAIC,SAAS,GAAGH,WAAW,CAACI,YAAY,EAAE;IAC1C,IAAIC,WAAW,GAAG,IAAI;IAEtB,IAAIF,SAAS,CAACG,WAAW,EAAE,EAAE;MAC3B,IAAIC,SAAS,GAAGJ,SAAS,CAACK,YAAY,EAAE;MACxC,IAAIC,QAAQ,GAAGR,OAAO,CAACS,cAAc,CAACH,SAAS,CAAC,CAACI,SAAS,EAAE;MAE5D,IAAIF,QAAQ,KAAKN,SAAS,CAACS,eAAe,EAAE,EAAE;QAC5C,IAAIC,QAAQ,GAAGZ,OAAO,CAACa,WAAW,CAACP,SAAS,CAAC;QAE7C,IAAIM,QAAQ,IAAI,IAAI,EAAE;UACpB,OAAOb,WAAW;QACpB;QAEAK,WAAW,GAAGF,SAAS,CAACY,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC,CAACE,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;MACzE,CAAC,MAAM;QACLV,WAAW,GAAGF,SAAS,CAACY,GAAG,CAAC,aAAa,EAAEN,QAAQ,CAAC;MACtD;IACF,CAAC,MAAM;MACLJ,WAAW,GAAGF,SAAS;IACzB;IAEAE,WAAW,GAAGT,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC;IACvC;;IAEAR,SAAS,GAAGF,uBAAuB,CAACM,OAAO,EAAEI,WAAW,CAAC;IACzD,IAAIW,YAAY,GAAGxB,aAAa,CAACyB,WAAW,CAAChB,OAAO,EAAEI,WAAW,EAAE,SAAS,CAAC;IAE7E,IAAIW,YAAY,KAAKf,OAAO,EAAE;MAC5B,OAAOD,WAAW;IACpB;IAEA,OAAON,WAAW,CAACwB,IAAI,CAAClB,WAAW,EAAEgB,YAAY,EAAE,cAAc,CAAC;EACpE,CAAC;EACDG,KAAK,EAAE,SAASA,KAAKA,CAACnB,WAAW,EAAE;IACjC,IAAI,CAACH,SAAS,EAAE;MACd,OAAOG,WAAW;IACpB;IAEA,IAAIoB,UAAU,GAAG5B,aAAa,CAAC6B,mBAAmB,CAACrB,WAAW,CAACE,iBAAiB,EAAE,EAAEF,WAAW,CAACI,YAAY,EAAE,EAAEP,SAAS,CAAC;IAC1H,OAAOH,WAAW,CAACwB,IAAI,CAAClB,WAAW,EAAEoB,UAAU,EAAE,iBAAiB,CAAC;EACrE;AACF,CAAC;AACDE,MAAM,CAACC,OAAO,GAAGzB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
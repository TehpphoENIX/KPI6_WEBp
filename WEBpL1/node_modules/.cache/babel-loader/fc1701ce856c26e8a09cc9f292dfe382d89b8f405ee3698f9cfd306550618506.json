{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar Immutable = require(\"immutable\");\nvar List = Immutable.List;\nvar DELIMITER = '.';\n/**\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\n * instances to identify sections of a ContentBlock that should be rendered\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\n * be intended to stand out visually, be rendered as anchors, etc.\n *\n * The list of decorators supplied to the constructor will be used in the\n * order they are provided. This allows the caller to specify a priority for\n * string matching, in case of match collisions among decorators.\n *\n * For instance, I may have a link with a `#` in its text. Though this section\n * of text may match our hashtag decorator, it should not be treated as a\n * hashtag. I should therefore list my link DraftDecorator\n * before my hashtag DraftDecorator when constructing this composite\n * decorator instance.\n *\n * Thus, when a collision like this is encountered, the earlier match is\n * preserved and the new match is discarded.\n */\n\nvar CompositeDraftDecorator = /*#__PURE__*/function () {\n  function CompositeDraftDecorator(decorators) {\n    _defineProperty(this, \"_decorators\", void 0);\n\n    // Copy the decorator array, since we use this array order to determine\n    // precedence of decoration matching. If the array is mutated externally,\n    // we don't want to be affected here.\n    this._decorators = decorators.slice();\n  }\n  var _proto = CompositeDraftDecorator.prototype;\n  _proto.getDecorations = function getDecorations(block, contentState) {\n    var decorations = Array(block.getText().length).fill(null);\n    this._decorators.forEach(function ( /*object*/\n    decorator, /*number*/\n    ii) {\n      var counter = 0;\n      var strategy = decorator.strategy;\n      var callback = function callback( /*number*/\n      start, /*number*/\n      end) {\n        // Find out if any of our matching range is already occupied\n        // by another decorator. If so, discard the match. Otherwise, store\n        // the component key for rendering.\n        if (canOccupySlice(decorations, start, end)) {\n          occupySlice(decorations, start, end, ii + DELIMITER + counter);\n          counter++;\n        }\n      };\n      strategy(block, callback, contentState);\n    });\n    return List(decorations);\n  };\n  _proto.getComponentForKey = function getComponentForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].component;\n  };\n  _proto.getPropsForKey = function getPropsForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].props;\n  };\n  return CompositeDraftDecorator;\n}();\n/**\n * Determine whether we can occupy the specified slice of the decorations\n * array.\n */\n\nfunction canOccupySlice(decorations, start, end) {\n  for (var ii = start; ii < end; ii++) {\n    if (decorations[ii] != null) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Splice the specified component into our decoration array at the desired\n * range.\n */\n\nfunction occupySlice(targetArr, start, end, componentKey) {\n  for (var ii = start; ii < end; ii++) {\n    targetArr[ii] = componentKey;\n  }\n}\nmodule.exports = CompositeDraftDecorator;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Immutable","require","List","DELIMITER","CompositeDraftDecorator","decorators","_decorators","slice","_proto","prototype","getDecorations","block","contentState","decorations","Array","getText","length","fill","forEach","decorator","ii","counter","strategy","callback","start","end","canOccupySlice","occupySlice","getComponentForKey","componentKey","parseInt","split","component","getPropsForKey","props","targetArr","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/CompositeDraftDecorator.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Immutable = require(\"immutable\");\n\nvar List = Immutable.List;\nvar DELIMITER = '.';\n/**\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\n * instances to identify sections of a ContentBlock that should be rendered\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\n * be intended to stand out visually, be rendered as anchors, etc.\n *\n * The list of decorators supplied to the constructor will be used in the\n * order they are provided. This allows the caller to specify a priority for\n * string matching, in case of match collisions among decorators.\n *\n * For instance, I may have a link with a `#` in its text. Though this section\n * of text may match our hashtag decorator, it should not be treated as a\n * hashtag. I should therefore list my link DraftDecorator\n * before my hashtag DraftDecorator when constructing this composite\n * decorator instance.\n *\n * Thus, when a collision like this is encountered, the earlier match is\n * preserved and the new match is discarded.\n */\n\nvar CompositeDraftDecorator = /*#__PURE__*/function () {\n  function CompositeDraftDecorator(decorators) {\n    _defineProperty(this, \"_decorators\", void 0);\n\n    // Copy the decorator array, since we use this array order to determine\n    // precedence of decoration matching. If the array is mutated externally,\n    // we don't want to be affected here.\n    this._decorators = decorators.slice();\n  }\n\n  var _proto = CompositeDraftDecorator.prototype;\n\n  _proto.getDecorations = function getDecorations(block, contentState) {\n    var decorations = Array(block.getText().length).fill(null);\n\n    this._decorators.forEach(function (\n    /*object*/\n    decorator,\n    /*number*/\n    ii) {\n      var counter = 0;\n      var strategy = decorator.strategy;\n\n      var callback = function callback(\n      /*number*/\n      start,\n      /*number*/\n      end) {\n        // Find out if any of our matching range is already occupied\n        // by another decorator. If so, discard the match. Otherwise, store\n        // the component key for rendering.\n        if (canOccupySlice(decorations, start, end)) {\n          occupySlice(decorations, start, end, ii + DELIMITER + counter);\n          counter++;\n        }\n      };\n\n      strategy(block, callback, contentState);\n    });\n\n    return List(decorations);\n  };\n\n  _proto.getComponentForKey = function getComponentForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].component;\n  };\n\n  _proto.getPropsForKey = function getPropsForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].props;\n  };\n\n  return CompositeDraftDecorator;\n}();\n/**\n * Determine whether we can occupy the specified slice of the decorations\n * array.\n */\n\n\nfunction canOccupySlice(decorations, start, end) {\n  for (var ii = start; ii < end; ii++) {\n    if (decorations[ii] != null) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Splice the specified component into our decoration array at the desired\n * range.\n */\n\n\nfunction occupySlice(targetArr, start, end, componentKey) {\n  for (var ii = start; ii < end; ii++) {\n    targetArr[ii] = componentKey;\n  }\n}\n\nmodule.exports = CompositeDraftDecorator;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,SAASA,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,IAAIQ,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEpC,IAAIC,IAAI,GAAGF,SAAS,CAACE,IAAI;AACzB,IAAIC,SAAS,GAAG,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,uBAAuB,GAAG,aAAa,YAAY;EACrD,SAASA,uBAAuBA,CAACC,UAAU,EAAE;IAC3Cd,eAAe,CAAC,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;;IAE5C;IACA;IACA;IACA,IAAI,CAACe,WAAW,GAAGD,UAAU,CAACE,KAAK,EAAE;EACvC;EAEA,IAAIC,MAAM,GAAGJ,uBAAuB,CAACK,SAAS;EAE9CD,MAAM,CAACE,cAAc,GAAG,SAASA,cAAcA,CAACC,KAAK,EAAEC,YAAY,EAAE;IACnE,IAAIC,WAAW,GAAGC,KAAK,CAACH,KAAK,CAACI,OAAO,EAAE,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAE1D,IAAI,CAACX,WAAW,CAACY,OAAO,CAAC,WACzB;IACAC,SAAS,EACT;IACAC,EAAE,EAAE;MACF,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIC,QAAQ,GAAGH,SAAS,CAACG,QAAQ;MAEjC,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAAA,CAChC;MACAC,KAAK,EACL;MACAC,GAAG,EAAE;QACH;QACA;QACA;QACA,IAAIC,cAAc,CAACb,WAAW,EAAEW,KAAK,EAAEC,GAAG,CAAC,EAAE;UAC3CE,WAAW,CAACd,WAAW,EAAEW,KAAK,EAAEC,GAAG,EAAEL,EAAE,GAAGjB,SAAS,GAAGkB,OAAO,CAAC;UAC9DA,OAAO,EAAE;QACX;MACF,CAAC;MAEDC,QAAQ,CAACX,KAAK,EAAEY,QAAQ,EAAEX,YAAY,CAAC;IACzC,CAAC,CAAC;IAEF,OAAOV,IAAI,CAACW,WAAW,CAAC;EAC1B,CAAC;EAEDL,MAAM,CAACoB,kBAAkB,GAAG,SAASA,kBAAkBA,CAACnC,GAAG,EAAE;IAC3D,IAAIoC,YAAY,GAAGC,QAAQ,CAACrC,GAAG,CAACsC,KAAK,CAAC5B,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACxD,OAAO,IAAI,CAACG,WAAW,CAACuB,YAAY,CAAC,CAACG,SAAS;EACjD,CAAC;EAEDxB,MAAM,CAACyB,cAAc,GAAG,SAASA,cAAcA,CAACxC,GAAG,EAAE;IACnD,IAAIoC,YAAY,GAAGC,QAAQ,CAACrC,GAAG,CAACsC,KAAK,CAAC5B,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACxD,OAAO,IAAI,CAACG,WAAW,CAACuB,YAAY,CAAC,CAACK,KAAK;EAC7C,CAAC;EAED,OAAO9B,uBAAuB;AAChC,CAAC,EAAE;AACH;AACA;AACA;AACA;;AAGA,SAASsB,cAAcA,CAACb,WAAW,EAAEW,KAAK,EAAEC,GAAG,EAAE;EAC/C,KAAK,IAAIL,EAAE,GAAGI,KAAK,EAAEJ,EAAE,GAAGK,GAAG,EAAEL,EAAE,EAAE,EAAE;IACnC,IAAIP,WAAW,CAACO,EAAE,CAAC,IAAI,IAAI,EAAE;MAC3B,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb;AACA;AACA;AACA;AACA;;AAGA,SAASO,WAAWA,CAACQ,SAAS,EAAEX,KAAK,EAAEC,GAAG,EAAEI,YAAY,EAAE;EACxD,KAAK,IAAIT,EAAE,GAAGI,KAAK,EAAEJ,EAAE,GAAGK,GAAG,EAAEL,EAAE,EAAE,EAAE;IACnCe,SAAS,CAACf,EAAE,CAAC,GAAGS,YAAY;EAC9B;AACF;AAEAO,MAAM,CAACC,OAAO,GAAGjC,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
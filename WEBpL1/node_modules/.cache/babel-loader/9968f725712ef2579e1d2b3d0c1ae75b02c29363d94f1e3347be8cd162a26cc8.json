{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teh_phoENIX\\\\source\\\\repos\\\\WEBp\\\\WEBpL1\\\\src\\\\jsx\\\\TextEditor.jsx\",\n  _s = $RefreshSig$();\nimport { $getRoot, $getSelection } from 'lexical';\nimport { LexicalComposer } from '@lexical/react/LexicalComposer';\nimport { PlainTextPlugin } from '@lexical/react/LexicalPlainTextPlugin';\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable';\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';\nimport { OnChangePlugin } from '@lexical/react/LexicalOnChangePlugin';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\nimport '../css/general.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  // Theme styling goes here\n};\n\n// Catch any errors that occur during Lexical updates and log them\n// or throw them as needed. If you don't throw them, Lexical will\n// try to recover gracefully without losing user data.\nfunction onError(error) {\n  console.error(error);\n}\nfunction MyCustomAutoFocusPlugin() {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    // Focus the editor when the effect fires!\n    editor.focus();\n  }, [editor]);\n  return null;\n}\n_s(MyCustomAutoFocusPlugin, \"mCqe7sh4aC9mLBXPHfG3d/PNTaQ=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c = MyCustomAutoFocusPlugin;\nexport default function Editor() {\n  const initialConfig = {\n    namespace: 'MyEditor',\n    theme,\n    onError\n  };\n  return /*#__PURE__*/_jsxDEV(LexicalComposer, {\n    initialConfig: initialConfig,\n    children: [/*#__PURE__*/_jsxDEV(PlainTextPlugin, {\n      contentEditable: /*#__PURE__*/_jsxDEV(ContentEditable, {\n        className: \"editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 26\n      }, this),\n      placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Enter some text...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this),\n      ErrorBoundary: LexicalErrorBoundary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OnChangePlugin, {\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HistoryPlugin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Editor;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyCustomAutoFocusPlugin\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"names":["$getRoot","$getSelection","LexicalComposer","PlainTextPlugin","ContentEditable","HistoryPlugin","OnChangePlugin","useLexicalComposerContext","LexicalErrorBoundary","jsxDEV","_jsxDEV","theme","onError","error","console","MyCustomAutoFocusPlugin","_s","editor","useEffect","focus","_c","Editor","initialConfig","namespace","children","contentEditable","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","ErrorBoundary","onChange","_c2","$RefreshReg$"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/src/jsx/TextEditor.jsx"],"sourcesContent":["import {$getRoot, $getSelection} from 'lexical';\r\nimport {LexicalComposer} from '@lexical/react/LexicalComposer';\r\nimport {PlainTextPlugin} from '@lexical/react/LexicalPlainTextPlugin';\r\nimport {ContentEditable} from '@lexical/react/LexicalContentEditable';\r\nimport {HistoryPlugin} from '@lexical/react/LexicalHistoryPlugin';\r\nimport {OnChangePlugin} from '@lexical/react/LexicalOnChangePlugin';\r\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\r\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\r\n\r\nimport '../css/general.css'\r\n\r\nconst theme = {\r\n  // Theme styling goes here\r\n}\r\n\r\n// Catch any errors that occur during Lexical updates and log them\r\n// or throw them as needed. If you don't throw them, Lexical will\r\n// try to recover gracefully without losing user data.\r\nfunction onError(error) {\r\n  console.error(error);\r\n}\r\n\r\nfunction MyCustomAutoFocusPlugin() {\r\n    const [editor] = useLexicalComposerContext();\r\n  \r\n    useEffect(() => {\r\n      // Focus the editor when the effect fires!\r\n      editor.focus();\r\n    }, [editor]);\r\n  \r\n    return null;\r\n  }\r\n\r\nexport default function Editor() {\r\n  const initialConfig = {\r\n    namespace: 'MyEditor', \r\n    theme,\r\n    onError,\r\n  };\r\n\r\n  return (\r\n    <LexicalComposer initialConfig={initialConfig}>\r\n      <PlainTextPlugin\r\n        contentEditable={<ContentEditable className='editor'/>}\r\n        placeholder={<div>Enter some text...</div>}\r\n        ErrorBoundary={LexicalErrorBoundary}\r\n      />\r\n      <OnChangePlugin onChange={onChange} />\r\n      <HistoryPlugin />\r\n    </LexicalComposer>\r\n  );\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,aAAa,QAAO,SAAS;AAC/C,SAAQC,eAAe,QAAO,gCAAgC;AAC9D,SAAQC,eAAe,QAAO,uCAAuC;AACrE,SAAQC,eAAe,QAAO,uCAAuC;AACrE,SAAQC,aAAa,QAAO,qCAAqC;AACjE,SAAQC,cAAc,QAAO,sCAAsC;AACnE,SAAQC,yBAAyB,QAAO,uCAAuC;AAC/E,OAAOC,oBAAoB,MAAM,qCAAqC;AAEtE,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,KAAK,GAAG;EACZ;AAAA,CACD;;AAED;AACA;AACA;AACA,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;AACtB;AAEA,SAASE,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,CAAC,GAAGV,yBAAyB,EAAE;EAE5CW,SAAS,CAAC,MAAM;IACd;IACAD,MAAM,CAACE,KAAK,EAAE;EAChB,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,OAAO,IAAI;AACb;AAACD,EAAA,CATMD,uBAAuB;EAAA,QACXR,yBAAyB;AAAA;AAAAa,EAAA,GADrCL,uBAAuB;AAWhC,eAAe,SAASM,MAAMA,CAAA,EAAG;EAC/B,MAAMC,aAAa,GAAG;IACpBC,SAAS,EAAE,UAAU;IACrBZ,KAAK;IACLC;EACF,CAAC;EAED,oBACEF,OAAA,CAACR,eAAe;IAACoB,aAAa,EAAEA,aAAc;IAAAE,QAAA,gBAC5Cd,OAAA,CAACP,eAAe;MACdsB,eAAe,eAAEf,OAAA,CAACN,eAAe;QAACsB,SAAS,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MACvDC,WAAW,eAAErB,OAAA;QAAAc,QAAA,EAAK;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;MAC3CE,aAAa,EAAExB;IAAqB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,eACFpB,OAAA,CAACJ,cAAc;MAAC2B,QAAQ,EAAEA;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtCpB,OAAA,CAACL,aAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEtB;AAACI,GAAA,GAlBuBb,MAAM;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
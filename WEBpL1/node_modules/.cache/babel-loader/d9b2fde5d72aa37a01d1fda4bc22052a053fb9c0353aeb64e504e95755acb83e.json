{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar findRangesImmutable = require(\"./findRangesImmutable\");\nvar getOwnObjectValues = require(\"./getOwnObjectValues\");\nvar Immutable = require(\"immutable\");\nvar List = Immutable.List,\n  Repeat = Immutable.Repeat,\n  Record = Immutable.Record;\nvar returnTrue = function returnTrue() {\n  return true;\n};\nvar defaultLeafRange = {\n  start: null,\n  end: null\n};\nvar LeafRange = Record(defaultLeafRange);\nvar defaultDecoratorRange = {\n  start: null,\n  end: null,\n  decoratorKey: null,\n  leaves: null\n};\nvar DecoratorRange = Record(defaultDecoratorRange);\nvar BlockTree = {\n  /**\n   * Generate a block tree for a given ContentBlock/decorator pair.\n   */\n  generate: function generate(contentState, block, decorator) {\n    var textLength = block.getLength();\n    if (!textLength) {\n      return List.of(new DecoratorRange({\n        start: 0,\n        end: 0,\n        decoratorKey: null,\n        leaves: List.of(new LeafRange({\n          start: 0,\n          end: 0\n        }))\n      }));\n    }\n    var leafSets = [];\n    var decorations = decorator ? decorator.getDecorations(block, contentState) : List(Repeat(null, textLength));\n    var chars = block.getCharacterList();\n    findRangesImmutable(decorations, areEqual, returnTrue, function (start, end) {\n      leafSets.push(new DecoratorRange({\n        start: start,\n        end: end,\n        decoratorKey: decorations.get(start),\n        leaves: generateLeaves(chars.slice(start, end).toList(), start)\n      }));\n    });\n    return List(leafSets);\n  },\n  fromJS: function fromJS(_ref) {\n    var leaves = _ref.leaves,\n      other = _objectWithoutPropertiesLoose(_ref, [\"leaves\"]);\n    return new DecoratorRange(_objectSpread({}, other, {\n      leaves: leaves != null ? List(Array.isArray(leaves) ? leaves : getOwnObjectValues(leaves)).map(function (leaf) {\n        return LeafRange(leaf);\n      }) : null\n    }));\n  }\n};\n/**\n * Generate LeafRange records for a given character list.\n */\n\nfunction generateLeaves(characters, offset) {\n  var leaves = [];\n  var inlineStyles = characters.map(function (c) {\n    return c.getStyle();\n  }).toList();\n  findRangesImmutable(inlineStyles, areEqual, returnTrue, function (start, end) {\n    leaves.push(new LeafRange({\n      start: start + offset,\n      end: end + offset\n    }));\n  });\n  return List(leaves);\n}\nfunction areEqual(a, b) {\n  return a === b;\n}\nmodule.exports = BlockTree;","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","findRangesImmutable","require","getOwnObjectValues","Immutable","List","Repeat","Record","returnTrue","defaultLeafRange","start","end","LeafRange","defaultDecoratorRange","decoratorKey","leaves","DecoratorRange","BlockTree","generate","contentState","block","decorator","textLength","getLength","of","leafSets","decorations","getDecorations","chars","getCharacterList","areEqual","push","get","generateLeaves","slice","toList","fromJS","_ref","other","Array","isArray","map","leaf","characters","offset","inlineStyles","c","getStyle","a","b","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/BlockTree.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar findRangesImmutable = require(\"./findRangesImmutable\");\n\nvar getOwnObjectValues = require(\"./getOwnObjectValues\");\n\nvar Immutable = require(\"immutable\");\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat,\n    Record = Immutable.Record;\n\nvar returnTrue = function returnTrue() {\n  return true;\n};\n\nvar defaultLeafRange = {\n  start: null,\n  end: null\n};\nvar LeafRange = Record(defaultLeafRange);\nvar defaultDecoratorRange = {\n  start: null,\n  end: null,\n  decoratorKey: null,\n  leaves: null\n};\nvar DecoratorRange = Record(defaultDecoratorRange);\nvar BlockTree = {\n  /**\n   * Generate a block tree for a given ContentBlock/decorator pair.\n   */\n  generate: function generate(contentState, block, decorator) {\n    var textLength = block.getLength();\n\n    if (!textLength) {\n      return List.of(new DecoratorRange({\n        start: 0,\n        end: 0,\n        decoratorKey: null,\n        leaves: List.of(new LeafRange({\n          start: 0,\n          end: 0\n        }))\n      }));\n    }\n\n    var leafSets = [];\n    var decorations = decorator ? decorator.getDecorations(block, contentState) : List(Repeat(null, textLength));\n    var chars = block.getCharacterList();\n    findRangesImmutable(decorations, areEqual, returnTrue, function (start, end) {\n      leafSets.push(new DecoratorRange({\n        start: start,\n        end: end,\n        decoratorKey: decorations.get(start),\n        leaves: generateLeaves(chars.slice(start, end).toList(), start)\n      }));\n    });\n    return List(leafSets);\n  },\n  fromJS: function fromJS(_ref) {\n    var leaves = _ref.leaves,\n        other = _objectWithoutPropertiesLoose(_ref, [\"leaves\"]);\n\n    return new DecoratorRange(_objectSpread({}, other, {\n      leaves: leaves != null ? List(Array.isArray(leaves) ? leaves : getOwnObjectValues(leaves)).map(function (leaf) {\n        return LeafRange(leaf);\n      }) : null\n    }));\n  }\n};\n/**\n * Generate LeafRange records for a given character list.\n */\n\nfunction generateLeaves(characters, offset) {\n  var leaves = [];\n  var inlineStyles = characters.map(function (c) {\n    return c.getStyle();\n  }).toList();\n  findRangesImmutable(inlineStyles, areEqual, returnTrue, function (start, end) {\n    leaves.push(new LeafRange({\n      start: start + offset,\n      end: end + offset\n    }));\n  });\n  return List(leaves);\n}\n\nfunction areEqual(a, b) {\n  return a === b;\n}\n\nmodule.exports = BlockTree;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,SAASA,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC,IAAI,IAAI,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAE,IAAII,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;IAAE,IAAI,OAAOE,MAAM,CAACE,qBAAqB,KAAK,UAAU,EAAE;MAAEH,OAAO,GAAGA,OAAO,CAACI,MAAM,CAACH,MAAM,CAACE,qBAAqB,CAACJ,MAAM,CAAC,CAACM,MAAM,CAAC,UAAUC,GAAG,EAAE;QAAE,OAAOL,MAAM,CAACM,wBAAwB,CAACR,MAAM,EAAEO,GAAG,CAAC,CAACE,UAAU;MAAE,CAAC,CAAC,CAAC;IAAE;IAAER,OAAO,CAACS,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEC,eAAe,CAAChB,MAAM,EAAEe,GAAG,EAAEX,MAAM,CAACW,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAOf,MAAM;AAAE;AAEhe,SAASgB,eAAeA,CAACC,GAAG,EAAEF,GAAG,EAAEG,KAAK,EAAE;EAAE,IAAIH,GAAG,IAAIE,GAAG,EAAE;IAAEX,MAAM,CAACa,cAAc,CAACF,GAAG,EAAEF,GAAG,EAAE;MAAEG,KAAK,EAAEA,KAAK;MAAEL,UAAU,EAAE,IAAI;MAAEO,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEJ,GAAG,CAACF,GAAG,CAAC,GAAGG,KAAK;EAAE;EAAE,OAAOD,GAAG;AAAE;AAEhN,SAASK,6BAA6BA,CAAClB,MAAM,EAAEmB,QAAQ,EAAE;EAAE,IAAInB,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC;EAAE,IAAIJ,MAAM,GAAG,CAAC,CAAC;EAAE,IAAIwB,UAAU,GAAGlB,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;EAAE,IAAIW,GAAG,EAAEd,CAAC;EAAE,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,UAAU,CAACrB,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAEc,GAAG,GAAGS,UAAU,CAACvB,CAAC,CAAC;IAAE,IAAIsB,QAAQ,CAACE,OAAO,CAACV,GAAG,CAAC,IAAI,CAAC,EAAE;IAAUf,MAAM,CAACe,GAAG,CAAC,GAAGX,MAAM,CAACW,GAAG,CAAC;EAAE;EAAE,OAAOf,MAAM;AAAE;AAElT,IAAI0B,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE1D,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAExD,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AAEpC,IAAIG,IAAI,GAAGD,SAAS,CAACC,IAAI;EACrBC,MAAM,GAAGF,SAAS,CAACE,MAAM;EACzBC,MAAM,GAAGH,SAAS,CAACG,MAAM;AAE7B,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EACrC,OAAO,IAAI;AACb,CAAC;AAED,IAAIC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE;AACP,CAAC;AACD,IAAIC,SAAS,GAAGL,MAAM,CAACE,gBAAgB,CAAC;AACxC,IAAII,qBAAqB,GAAG;EAC1BH,KAAK,EAAE,IAAI;EACXC,GAAG,EAAE,IAAI;EACTG,YAAY,EAAE,IAAI;EAClBC,MAAM,EAAE;AACV,CAAC;AACD,IAAIC,cAAc,GAAGT,MAAM,CAACM,qBAAqB,CAAC;AAClD,IAAII,SAAS,GAAG;EACd;AACF;AACA;EACEC,QAAQ,EAAE,SAASA,QAAQA,CAACC,YAAY,EAAEC,KAAK,EAAEC,SAAS,EAAE;IAC1D,IAAIC,UAAU,GAAGF,KAAK,CAACG,SAAS,EAAE;IAElC,IAAI,CAACD,UAAU,EAAE;MACf,OAAOjB,IAAI,CAACmB,EAAE,CAAC,IAAIR,cAAc,CAAC;QAChCN,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE,CAAC;QACNG,YAAY,EAAE,IAAI;QAClBC,MAAM,EAAEV,IAAI,CAACmB,EAAE,CAAC,IAAIZ,SAAS,CAAC;UAC5BF,KAAK,EAAE,CAAC;UACRC,GAAG,EAAE;QACP,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC;IACL;IAEA,IAAIc,QAAQ,GAAG,EAAE;IACjB,IAAIC,WAAW,GAAGL,SAAS,GAAGA,SAAS,CAACM,cAAc,CAACP,KAAK,EAAED,YAAY,CAAC,GAAGd,IAAI,CAACC,MAAM,CAAC,IAAI,EAAEgB,UAAU,CAAC,CAAC;IAC5G,IAAIM,KAAK,GAAGR,KAAK,CAACS,gBAAgB,EAAE;IACpC5B,mBAAmB,CAACyB,WAAW,EAAEI,QAAQ,EAAEtB,UAAU,EAAE,UAAUE,KAAK,EAAEC,GAAG,EAAE;MAC3Ec,QAAQ,CAACM,IAAI,CAAC,IAAIf,cAAc,CAAC;QAC/BN,KAAK,EAAEA,KAAK;QACZC,GAAG,EAAEA,GAAG;QACRG,YAAY,EAAEY,WAAW,CAACM,GAAG,CAACtB,KAAK,CAAC;QACpCK,MAAM,EAAEkB,cAAc,CAACL,KAAK,CAACM,KAAK,CAACxB,KAAK,EAAEC,GAAG,CAAC,CAACwB,MAAM,EAAE,EAAEzB,KAAK;MAChE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IACF,OAAOL,IAAI,CAACoB,QAAQ,CAAC;EACvB,CAAC;EACDW,MAAM,EAAE,SAASA,MAAMA,CAACC,IAAI,EAAE;IAC5B,IAAItB,MAAM,GAAGsB,IAAI,CAACtB,MAAM;MACpBuB,KAAK,GAAGzC,6BAA6B,CAACwC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC;IAE3D,OAAO,IAAIrB,cAAc,CAAC1C,aAAa,CAAC,CAAC,CAAC,EAAEgE,KAAK,EAAE;MACjDvB,MAAM,EAAEA,MAAM,IAAI,IAAI,GAAGV,IAAI,CAACkC,KAAK,CAACC,OAAO,CAACzB,MAAM,CAAC,GAAGA,MAAM,GAAGZ,kBAAkB,CAACY,MAAM,CAAC,CAAC,CAAC0B,GAAG,CAAC,UAAUC,IAAI,EAAE;QAC7G,OAAO9B,SAAS,CAAC8B,IAAI,CAAC;MACxB,CAAC,CAAC,GAAG;IACP,CAAC,CAAC,CAAC;EACL;AACF,CAAC;AACD;AACA;AACA;;AAEA,SAAST,cAAcA,CAACU,UAAU,EAAEC,MAAM,EAAE;EAC1C,IAAI7B,MAAM,GAAG,EAAE;EACf,IAAI8B,YAAY,GAAGF,UAAU,CAACF,GAAG,CAAC,UAAUK,CAAC,EAAE;IAC7C,OAAOA,CAAC,CAACC,QAAQ,EAAE;EACrB,CAAC,CAAC,CAACZ,MAAM,EAAE;EACXlC,mBAAmB,CAAC4C,YAAY,EAAEf,QAAQ,EAAEtB,UAAU,EAAE,UAAUE,KAAK,EAAEC,GAAG,EAAE;IAC5EI,MAAM,CAACgB,IAAI,CAAC,IAAInB,SAAS,CAAC;MACxBF,KAAK,EAAEA,KAAK,GAAGkC,MAAM;MACrBjC,GAAG,EAAEA,GAAG,GAAGiC;IACb,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;EACF,OAAOvC,IAAI,CAACU,MAAM,CAAC;AACrB;AAEA,SAASe,QAAQA,CAACkB,CAAC,EAAEC,CAAC,EAAE;EACtB,OAAOD,CAAC,KAAKC,CAAC;AAChB;AAEAC,MAAM,CAACC,OAAO,GAAGlC,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\nvar findAncestorOffsetKey = require(\"./findAncestorOffsetKey\");\nvar getWindowForNode = require(\"./getWindowForNode\");\nvar Immutable = require(\"immutable\");\nvar invariant = require(\"fbjs/lib/invariant\");\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\nvar Map = Immutable.Map;\n// Heavily based on Prosemirror's DOMObserver https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\nvar DOM_OBSERVER_OPTIONS = {\n  subtree: true,\n  characterData: true,\n  childList: true,\n  characterDataOldValue: false,\n  attributes: false\n}; // IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\n\nvar USE_CHAR_DATA = UserAgent.isBrowser('IE <= 11');\nvar DOMObserver = /*#__PURE__*/function () {\n  function DOMObserver(container) {\n    var _this = this;\n    _defineProperty(this, \"observer\", void 0);\n    _defineProperty(this, \"container\", void 0);\n    _defineProperty(this, \"mutations\", void 0);\n    _defineProperty(this, \"onCharData\", void 0);\n    this.container = container;\n    this.mutations = Map();\n    var containerWindow = getWindowForNode(container);\n    if (containerWindow.MutationObserver && !USE_CHAR_DATA) {\n      this.observer = new containerWindow.MutationObserver(function (mutations) {\n        return _this.registerMutations(mutations);\n      });\n    } else {\n      this.onCharData = function (e) {\n        !(e.target instanceof Node) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected target to be an instance of Node') : invariant(false) : void 0;\n        _this.registerMutation({\n          type: 'characterData',\n          target: e.target\n        });\n      };\n    }\n  }\n  var _proto = DOMObserver.prototype;\n  _proto.start = function start() {\n    if (this.observer) {\n      this.observer.observe(this.container, DOM_OBSERVER_OPTIONS);\n    } else {\n      /* $FlowFixMe[incompatible-call] (>=0.68.0 site=www,mobile) This event\n       * type is not defined by Flow's standard library */\n      this.container.addEventListener('DOMCharacterDataModified', this.onCharData);\n    }\n  };\n  _proto.stopAndFlushMutations = function stopAndFlushMutations() {\n    var observer = this.observer;\n    if (observer) {\n      this.registerMutations(observer.takeRecords());\n      observer.disconnect();\n    } else {\n      /* $FlowFixMe[incompatible-call] (>=0.68.0 site=www,mobile) This event\n       * type is not defined by Flow's standard library */\n      this.container.removeEventListener('DOMCharacterDataModified', this.onCharData);\n    }\n    var mutations = this.mutations;\n    this.mutations = Map();\n    return mutations;\n  };\n  _proto.registerMutations = function registerMutations(mutations) {\n    for (var i = 0; i < mutations.length; i++) {\n      this.registerMutation(mutations[i]);\n    }\n  };\n  _proto.getMutationTextContent = function getMutationTextContent(mutation) {\n    var type = mutation.type,\n      target = mutation.target,\n      removedNodes = mutation.removedNodes;\n    if (type === 'characterData') {\n      // When `textContent` is '', there is a race condition that makes\n      // getting the offsetKey from the target not possible.\n      // These events are also followed by a `childList`, which is the one\n      // we are able to retrieve the offsetKey and apply the '' text.\n      if (target.textContent !== '') {\n        // IE 11 considers the enter keypress that concludes the composition\n        // as an input char. This strips that newline character so the draft\n        // state does not receive spurious newlines.\n        if (USE_CHAR_DATA) {\n          return target.textContent.replace('\\n', '');\n        }\n        return target.textContent;\n      }\n    } else if (type === 'childList') {\n      if (removedNodes && removedNodes.length) {\n        // `characterData` events won't happen or are ignored when\n        // removing the last character of a leaf node, what happens\n        // instead is a `childList` event with a `removedNodes` array.\n        // For this case the textContent should be '' and\n        // `DraftModifier.replaceText` will make sure the content is\n        // updated properly.\n        return '';\n      } else if (target.textContent !== '') {\n        // Typing Chinese in an empty block in MS Edge results in a\n        // `childList` event with non-empty textContent.\n        // See https://github.com/facebook/draft-js/issues/2082\n        return target.textContent;\n      }\n    }\n    return null;\n  };\n  _proto.registerMutation = function registerMutation(mutation) {\n    var textContent = this.getMutationTextContent(mutation);\n    if (textContent != null) {\n      var offsetKey = nullthrows(findAncestorOffsetKey(mutation.target));\n      this.mutations = this.mutations.set(offsetKey, textContent);\n    }\n  };\n  return DOMObserver;\n}();\nmodule.exports = DOMObserver;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","UserAgent","require","findAncestorOffsetKey","getWindowForNode","Immutable","invariant","nullthrows","Map","DOM_OBSERVER_OPTIONS","subtree","characterData","childList","characterDataOldValue","attributes","USE_CHAR_DATA","isBrowser","DOMObserver","container","_this","mutations","containerWindow","MutationObserver","observer","registerMutations","onCharData","e","target","Node","process","env","NODE_ENV","registerMutation","type","_proto","prototype","start","observe","addEventListener","stopAndFlushMutations","takeRecords","disconnect","removeEventListener","i","length","getMutationTextContent","mutation","removedNodes","textContent","replace","offsetKey","set","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/DOMObserver.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar findAncestorOffsetKey = require(\"./findAncestorOffsetKey\");\n\nvar getWindowForNode = require(\"./getWindowForNode\");\n\nvar Immutable = require(\"immutable\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nvar Map = Immutable.Map;\n// Heavily based on Prosemirror's DOMObserver https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\nvar DOM_OBSERVER_OPTIONS = {\n  subtree: true,\n  characterData: true,\n  childList: true,\n  characterDataOldValue: false,\n  attributes: false\n}; // IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\n\nvar USE_CHAR_DATA = UserAgent.isBrowser('IE <= 11');\n\nvar DOMObserver = /*#__PURE__*/function () {\n  function DOMObserver(container) {\n    var _this = this;\n\n    _defineProperty(this, \"observer\", void 0);\n\n    _defineProperty(this, \"container\", void 0);\n\n    _defineProperty(this, \"mutations\", void 0);\n\n    _defineProperty(this, \"onCharData\", void 0);\n\n    this.container = container;\n    this.mutations = Map();\n    var containerWindow = getWindowForNode(container);\n\n    if (containerWindow.MutationObserver && !USE_CHAR_DATA) {\n      this.observer = new containerWindow.MutationObserver(function (mutations) {\n        return _this.registerMutations(mutations);\n      });\n    } else {\n      this.onCharData = function (e) {\n        !(e.target instanceof Node) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected target to be an instance of Node') : invariant(false) : void 0;\n\n        _this.registerMutation({\n          type: 'characterData',\n          target: e.target\n        });\n      };\n    }\n  }\n\n  var _proto = DOMObserver.prototype;\n\n  _proto.start = function start() {\n    if (this.observer) {\n      this.observer.observe(this.container, DOM_OBSERVER_OPTIONS);\n    } else {\n      /* $FlowFixMe[incompatible-call] (>=0.68.0 site=www,mobile) This event\n       * type is not defined by Flow's standard library */\n      this.container.addEventListener('DOMCharacterDataModified', this.onCharData);\n    }\n  };\n\n  _proto.stopAndFlushMutations = function stopAndFlushMutations() {\n    var observer = this.observer;\n\n    if (observer) {\n      this.registerMutations(observer.takeRecords());\n      observer.disconnect();\n    } else {\n      /* $FlowFixMe[incompatible-call] (>=0.68.0 site=www,mobile) This event\n       * type is not defined by Flow's standard library */\n      this.container.removeEventListener('DOMCharacterDataModified', this.onCharData);\n    }\n\n    var mutations = this.mutations;\n    this.mutations = Map();\n    return mutations;\n  };\n\n  _proto.registerMutations = function registerMutations(mutations) {\n    for (var i = 0; i < mutations.length; i++) {\n      this.registerMutation(mutations[i]);\n    }\n  };\n\n  _proto.getMutationTextContent = function getMutationTextContent(mutation) {\n    var type = mutation.type,\n        target = mutation.target,\n        removedNodes = mutation.removedNodes;\n\n    if (type === 'characterData') {\n      // When `textContent` is '', there is a race condition that makes\n      // getting the offsetKey from the target not possible.\n      // These events are also followed by a `childList`, which is the one\n      // we are able to retrieve the offsetKey and apply the '' text.\n      if (target.textContent !== '') {\n        // IE 11 considers the enter keypress that concludes the composition\n        // as an input char. This strips that newline character so the draft\n        // state does not receive spurious newlines.\n        if (USE_CHAR_DATA) {\n          return target.textContent.replace('\\n', '');\n        }\n\n        return target.textContent;\n      }\n    } else if (type === 'childList') {\n      if (removedNodes && removedNodes.length) {\n        // `characterData` events won't happen or are ignored when\n        // removing the last character of a leaf node, what happens\n        // instead is a `childList` event with a `removedNodes` array.\n        // For this case the textContent should be '' and\n        // `DraftModifier.replaceText` will make sure the content is\n        // updated properly.\n        return '';\n      } else if (target.textContent !== '') {\n        // Typing Chinese in an empty block in MS Edge results in a\n        // `childList` event with non-empty textContent.\n        // See https://github.com/facebook/draft-js/issues/2082\n        return target.textContent;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.registerMutation = function registerMutation(mutation) {\n    var textContent = this.getMutationTextContent(mutation);\n\n    if (textContent != null) {\n      var offsetKey = nullthrows(findAncestorOffsetKey(mutation.target));\n      this.mutations = this.mutations.set(offsetKey, textContent);\n    }\n  };\n\n  return DOMObserver;\n}();\n\nmodule.exports = DOMObserver;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,SAASA,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,IAAIQ,SAAS,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAE9D,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAEpD,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAW,CAAC;AAEpC,IAAII,SAAS,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AAE7C,IAAIK,UAAU,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AAE/C,IAAIM,GAAG,GAAGH,SAAS,CAACG,GAAG;AACvB;AACA,IAAIC,oBAAoB,GAAG;EACzBC,OAAO,EAAE,IAAI;EACbC,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE,IAAI;EACfC,qBAAqB,EAAE,KAAK;EAC5BC,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;;AAEH,IAAIC,aAAa,GAAGd,SAAS,CAACe,SAAS,CAAC,UAAU,CAAC;AAEnD,IAAIC,WAAW,GAAG,aAAa,YAAY;EACzC,SAASA,WAAWA,CAACC,SAAS,EAAE;IAC9B,IAAIC,KAAK,GAAG,IAAI;IAEhB3B,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCA,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAE1CA,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAE1CA,eAAe,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;IAE3C,IAAI,CAAC0B,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,SAAS,GAAGZ,GAAG,EAAE;IACtB,IAAIa,eAAe,GAAGjB,gBAAgB,CAACc,SAAS,CAAC;IAEjD,IAAIG,eAAe,CAACC,gBAAgB,IAAI,CAACP,aAAa,EAAE;MACtD,IAAI,CAACQ,QAAQ,GAAG,IAAIF,eAAe,CAACC,gBAAgB,CAAC,UAAUF,SAAS,EAAE;QACxE,OAAOD,KAAK,CAACK,iBAAiB,CAACJ,SAAS,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACK,UAAU,GAAG,UAAUC,CAAC,EAAE;QAC7B,EAAEA,CAAC,CAACC,MAAM,YAAYC,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGzB,SAAS,CAAC,KAAK,EAAE,2CAA2C,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QAE/Ja,KAAK,CAACa,gBAAgB,CAAC;UACrBC,IAAI,EAAE,eAAe;UACrBN,MAAM,EAAED,CAAC,CAACC;QACZ,CAAC,CAAC;MACJ,CAAC;IACH;EACF;EAEA,IAAIO,MAAM,GAAGjB,WAAW,CAACkB,SAAS;EAElCD,MAAM,CAACE,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;IAC9B,IAAI,IAAI,CAACb,QAAQ,EAAE;MACjB,IAAI,CAACA,QAAQ,CAACc,OAAO,CAAC,IAAI,CAACnB,SAAS,EAAET,oBAAoB,CAAC;IAC7D,CAAC,MAAM;MACL;AACN;MACM,IAAI,CAACS,SAAS,CAACoB,gBAAgB,CAAC,0BAA0B,EAAE,IAAI,CAACb,UAAU,CAAC;IAC9E;EACF,CAAC;EAEDS,MAAM,CAACK,qBAAqB,GAAG,SAASA,qBAAqBA,CAAA,EAAG;IAC9D,IAAIhB,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAE5B,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACC,iBAAiB,CAACD,QAAQ,CAACiB,WAAW,EAAE,CAAC;MAC9CjB,QAAQ,CAACkB,UAAU,EAAE;IACvB,CAAC,MAAM;MACL;AACN;MACM,IAAI,CAACvB,SAAS,CAACwB,mBAAmB,CAAC,0BAA0B,EAAE,IAAI,CAACjB,UAAU,CAAC;IACjF;IAEA,IAAIL,SAAS,GAAG,IAAI,CAACA,SAAS;IAC9B,IAAI,CAACA,SAAS,GAAGZ,GAAG,EAAE;IACtB,OAAOY,SAAS;EAClB,CAAC;EAEDc,MAAM,CAACV,iBAAiB,GAAG,SAASA,iBAAiBA,CAACJ,SAAS,EAAE;IAC/D,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,SAAS,CAACwB,MAAM,EAAED,CAAC,EAAE,EAAE;MACzC,IAAI,CAACX,gBAAgB,CAACZ,SAAS,CAACuB,CAAC,CAAC,CAAC;IACrC;EACF,CAAC;EAEDT,MAAM,CAACW,sBAAsB,GAAG,SAASA,sBAAsBA,CAACC,QAAQ,EAAE;IACxE,IAAIb,IAAI,GAAGa,QAAQ,CAACb,IAAI;MACpBN,MAAM,GAAGmB,QAAQ,CAACnB,MAAM;MACxBoB,YAAY,GAAGD,QAAQ,CAACC,YAAY;IAExC,IAAId,IAAI,KAAK,eAAe,EAAE;MAC5B;MACA;MACA;MACA;MACA,IAAIN,MAAM,CAACqB,WAAW,KAAK,EAAE,EAAE;QAC7B;QACA;QACA;QACA,IAAIjC,aAAa,EAAE;UACjB,OAAOY,MAAM,CAACqB,WAAW,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;QAC7C;QAEA,OAAOtB,MAAM,CAACqB,WAAW;MAC3B;IACF,CAAC,MAAM,IAAIf,IAAI,KAAK,WAAW,EAAE;MAC/B,IAAIc,YAAY,IAAIA,YAAY,CAACH,MAAM,EAAE;QACvC;QACA;QACA;QACA;QACA;QACA;QACA,OAAO,EAAE;MACX,CAAC,MAAM,IAAIjB,MAAM,CAACqB,WAAW,KAAK,EAAE,EAAE;QACpC;QACA;QACA;QACA,OAAOrB,MAAM,CAACqB,WAAW;MAC3B;IACF;IAEA,OAAO,IAAI;EACb,CAAC;EAEDd,MAAM,CAACF,gBAAgB,GAAG,SAASA,gBAAgBA,CAACc,QAAQ,EAAE;IAC5D,IAAIE,WAAW,GAAG,IAAI,CAACH,sBAAsB,CAACC,QAAQ,CAAC;IAEvD,IAAIE,WAAW,IAAI,IAAI,EAAE;MACvB,IAAIE,SAAS,GAAG3C,UAAU,CAACJ,qBAAqB,CAAC2C,QAAQ,CAACnB,MAAM,CAAC,CAAC;MAClE,IAAI,CAACP,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC+B,GAAG,CAACD,SAAS,EAAEF,WAAW,CAAC;IAC7D;EACF,CAAC;EAED,OAAO/B,WAAW;AACpB,CAAC,EAAE;AAEHmC,MAAM,CAACC,OAAO,GAAGpC,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}
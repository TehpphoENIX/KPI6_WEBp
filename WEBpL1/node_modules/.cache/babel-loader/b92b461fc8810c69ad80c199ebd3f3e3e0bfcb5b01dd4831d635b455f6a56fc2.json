{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KEY_DELIMITER = '-';\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n  decode: function decode(offsetKey) {\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n    var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(),\n      leafKey = _offsetKey$split$reve[0],\n      decoratorKey = _offsetKey$split$reve[1],\n      blockKeyParts = _offsetKey$split$reve.slice(2);\n    return {\n      // Recomposes the parts of blockKey after reversing them\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\nmodule.exports = DraftOffsetKey;","map":{"version":3,"names":["KEY_DELIMITER","DraftOffsetKey","encode","blockKey","decoratorKey","leafKey","decode","offsetKey","_offsetKey$split$reve","split","reverse","blockKeyParts","slice","join","parseInt","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/DraftOffsetKey.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KEY_DELIMITER = '-';\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n  decode: function decode(offsetKey) {\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n    var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(),\n        leafKey = _offsetKey$split$reve[0],\n        decoratorKey = _offsetKey$split$reve[1],\n        blockKeyParts = _offsetKey$split$reve.slice(2);\n\n    return {\n      // Recomposes the parts of blockKey after reversing them\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\nmodule.exports = DraftOffsetKey;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,aAAa,GAAG,GAAG;AACvB,IAAIC,cAAc,GAAG;EACnBC,MAAM,EAAE,SAASA,MAAMA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,EAAE;IACvD,OAAOF,QAAQ,GAAGH,aAAa,GAAGI,YAAY,GAAGJ,aAAa,GAAGK,OAAO;EAC1E,CAAC;EACDC,MAAM,EAAE,SAASA,MAAMA,CAACC,SAAS,EAAE;IACjC;IACA,IAAIC,qBAAqB,GAAGD,SAAS,CAACE,KAAK,CAACT,aAAa,CAAC,CAACU,OAAO,EAAE;MAChEL,OAAO,GAAGG,qBAAqB,CAAC,CAAC,CAAC;MAClCJ,YAAY,GAAGI,qBAAqB,CAAC,CAAC,CAAC;MACvCG,aAAa,GAAGH,qBAAqB,CAACI,KAAK,CAAC,CAAC,CAAC;IAElD,OAAO;MACL;MACAT,QAAQ,EAAEQ,aAAa,CAACD,OAAO,EAAE,CAACG,IAAI,CAACb,aAAa,CAAC;MACrDI,YAAY,EAAEU,QAAQ,CAACV,YAAY,EAAE,EAAE,CAAC;MACxCC,OAAO,EAAES,QAAQ,CAACT,OAAO,EAAE,EAAE;IAC/B,CAAC;EACH;AACF,CAAC;AACDU,MAAM,CAACC,OAAO,GAAGf,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}
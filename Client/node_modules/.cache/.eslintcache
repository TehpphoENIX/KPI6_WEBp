[{"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\index.js":"1","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\reportWebVitals.js":"2","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\Main.js":"3","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\Post.jsx":"4","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\Header.jsx":"5","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\Footer.jsx":"6","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\View.js":"7","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\404.js":"8","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\PostEditor.jsx":"9","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\TextEditor.jsx":"10","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\HTMLPlugin.tsx":"11","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\Create.js":"12"},{"size":1779,"mtime":1686213825486,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1681141260422,"results":"15","hashOfConfig":"14"},{"size":1013,"mtime":1686153799191,"results":"16","hashOfConfig":"14"},{"size":657,"mtime":1686154609855,"results":"17","hashOfConfig":"14"},{"size":280,"mtime":1681292168054,"results":"18","hashOfConfig":"14"},{"size":243,"mtime":1681236942599,"results":"19","hashOfConfig":"14"},{"size":3464,"mtime":1686217277723,"results":"20","hashOfConfig":"14"},{"size":333,"mtime":1682589068895,"results":"21","hashOfConfig":"14"},{"size":1492,"mtime":1682519414544,"results":"22","hashOfConfig":"14"},{"size":1678,"mtime":1682505959965,"results":"23","hashOfConfig":"14"},{"size":1273,"mtime":1682438694394,"results":"24","hashOfConfig":"14"},{"size":983,"mtime":1686213889141,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wwvrz5",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\index.js",["67","68","69","70"],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\Main.js",["71"],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\Post.jsx",[],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\Header.jsx",[],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\Footer.jsx",[],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\View.js",["72","73","74","75","76","77"],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\404.js",["78"],[],"import Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\nconst PageNotFound = () => {\r\n    return (<>\r\n        <Header/>\r\n        <p>PageNotFound</p>\r\n        <div class='dummy'></div>\r\n        <Footer/>\r\n    </>);\r\n};\r\n\r\nexport default PageNotFound","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\PostEditor.jsx",[],[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\TextEditor.jsx",["79","80","81","82","83","84"],[],"import {$getRoot, $getSelection} from 'lexical';\r\nimport {LexicalComposer} from '@lexical/react/LexicalComposer';\r\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\r\nimport {ContentEditable} from '@lexical/react/LexicalContentEditable';\r\nimport {HistoryPlugin} from '@lexical/react/LexicalHistoryPlugin';\r\nimport {OnChangePlugin} from '@lexical/react/LexicalOnChangePlugin';\r\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\r\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\r\nimport HtmlPlugin from './HTMLPlugin.tsx';\r\n\r\nimport {$generateHtmlFromNodes} from '@lexical/html';\r\n\r\nimport '../css/general.css'\r\nimport { useContext } from 'react';\r\n\r\nconst theme = {\r\n  // Theme styling goes here\r\n}\r\n\r\n// Catch any errors that occur during Lexical updates and log them\r\n// or throw them as needed. If you don't throw them, Lexical will\r\n// try to recover gracefully without losing user data.\r\nfunction onError(error) {\r\n  console.error(error);\r\n}\r\n\r\n// When the editor changes, you can get notified via the\r\n// LexicalOnChangePlugin!\r\n\r\nexport default function Editor({initialState, updateCallback}) {\r\n  const initialConfig = {\r\n    namespace: 'MyEditor', \r\n    theme,\r\n    onError,\r\n  };\r\n\r\n  return (\r\n    <LexicalComposer initialConfig={initialConfig}>\r\n        <RichTextPlugin\r\n            contentEditable={<ContentEditable className='editor'/>}\r\n            ErrorBoundary={LexicalErrorBoundary}\r\n        />\r\n        <HtmlPlugin\r\n            onHtmlChanged={(html) => updateCallback(html)}\r\n            initialHtml={initialState}\r\n        />\r\n        <HistoryPlugin />\r\n    </LexicalComposer>\r\n  );\r\n}","C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\components\\HTMLPlugin.tsx",["85"],[],"import { useState, useEffect } from \"react\";\r\nimport { OnChangePlugin } from \"@lexical/react/LexicalOnChangePlugin\";\r\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\r\nimport { $generateHtmlFromNodes, $generateNodesFromDOM } from \"@lexical/html\";\r\nimport { $insertNodes } from \"lexical\";\r\n\r\ninterface Props {\r\n    initialHtml?: string;\r\n    onHtmlChanged: (html: string) => void;\r\n}\r\n\r\nconst HtmlPlugin = ({ initialHtml, onHtmlChanged }: Props) => {\r\n    const [editor] = useLexicalComposerContext();\r\n\r\n    const [isFirstRender, setIsFirstRender] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!initialHtml || !isFirstRender) return;\r\n\r\n        setIsFirstRender(false);\r\n\r\n        editor.update(() => {\r\n            const parser = new DOMParser();\r\n            const dom = parser.parseFromString(initialHtml, \"text/html\");\r\n            const nodes = $generateNodesFromDOM(editor, dom);\r\n            $insertNodes(nodes);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <OnChangePlugin\r\n            onChange={(editorState) => {\r\n                editorState.read(() => {\r\n                    onHtmlChanged($generateHtmlFromNodes(editor));\r\n                });\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default HtmlPlugin;",[],"C:\\Users\\Teh_phoENIX\\source\\repos\\WEBp\\WEBpL1\\src\\pages\\Create.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":16,"column":8,"nodeType":"88","messageId":"89","endLine":16,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":19,"column":5,"nodeType":"88","messageId":"89","endLine":19,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":21,"column":7,"nodeType":"88","messageId":"89","endLine":21,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":23,"column":7,"nodeType":"88","messageId":"89","endLine":23,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":31,"column":16,"nodeType":"95","messageId":"96","endLine":31,"endColumn":18},{"ruleId":"86","severity":1,"message":"97","line":8,"column":20,"nodeType":"88","messageId":"89","endLine":8,"endColumn":26},{"ruleId":"86","severity":1,"message":"98","line":21,"column":13,"nodeType":"88","messageId":"89","endLine":21,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":23,"column":32,"nodeType":"95","messageId":"96","endLine":23,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":28,"column":25,"nodeType":"101","endLine":28,"endColumn":27,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":32,"column":29,"nodeType":"95","messageId":"96","endLine":32,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":78,"column":27,"nodeType":"95","messageId":"96","endLine":78,"endColumn":29},{"ruleId":"86","severity":1,"message":"104","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"105","line":1,"column":9,"nodeType":"88","messageId":"89","endLine":1,"endColumn":17},{"ruleId":"86","severity":1,"message":"106","line":1,"column":19,"nodeType":"88","messageId":"89","endLine":1,"endColumn":32},{"ruleId":"86","severity":1,"message":"107","line":6,"column":9,"nodeType":"88","messageId":"89","endLine":6,"endColumn":23},{"ruleId":"86","severity":1,"message":"108","line":7,"column":9,"nodeType":"88","messageId":"89","endLine":7,"endColumn":34},{"ruleId":"86","severity":1,"message":"109","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":31},{"ruleId":"86","severity":1,"message":"110","line":14,"column":10,"nodeType":"88","messageId":"89","endLine":14,"endColumn":20},{"ruleId":"99","severity":1,"message":"111","line":28,"column":8,"nodeType":"101","endLine":28,"endColumn":10,"suggestions":"112"},"no-unused-vars","'PageNotFound' is defined but never used.","Identifier","unusedVar","'postArray' is assigned a value but never used.","'serverAddr' is assigned a value but never used.","'getAllPosts' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'status' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["113"],"Expected '!==' and instead saw '!='.","'useLoaderData' is defined but never used.","'$getRoot' is defined but never used.","'$getSelection' is defined but never used.","'OnChangePlugin' is defined but never used.","'useLexicalComposerContext' is defined but never used.","'$generateHtmlFromNodes' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'editor', 'initialHtml', and 'isFirstRender'. Either include them or remove the dependency array.",["114"],{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [id]",{"range":"119","text":"120"},"Update the dependencies array to be: [editor, initialHtml, isFirstRender]",{"range":"121","text":"122"},[975,977],"[id]",[985,987],"[editor, initialHtml, isFirstRender]"]
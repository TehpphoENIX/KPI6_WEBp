{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\nvar generateRandomKey = require(\"./generateRandomKey\");\nvar Immutable = require(\"immutable\");\nvar invariant = require(\"fbjs/lib/invariant\");\nvar modifyBlockForContentState = require(\"./modifyBlockForContentState\");\nvar List = Immutable.List,\n  Map = Immutable.Map;\nvar transformBlock = function transformBlock(key, blockMap, func) {\n  if (!key) {\n    return;\n  }\n  var block = blockMap.get(key);\n  if (!block) {\n    return;\n  }\n  blockMap.set(key, func(block));\n};\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\n  return blockMap.withMutations(function (blocks) {\n    var originalBlockKey = originalBlock.getKey();\n    var belowBlockKey = belowBlock.getKey(); // update block parent\n\n    transformBlock(originalBlock.getParentKey(), blocks, function (block) {\n      var parentChildrenList = block.getChildKeys();\n      var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\n      var newChildrenArray = parentChildrenList.toArray();\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\n      return block.merge({\n        children: List(newChildrenArray)\n      });\n    }); // update original next block\n\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, function (block) {\n      return block.merge({\n        prevSibling: belowBlockKey\n      });\n    }); // update original block\n\n    transformBlock(originalBlockKey, blocks, function (block) {\n      return block.merge({\n        nextSibling: belowBlockKey\n      });\n    }); // update below block\n\n    transformBlock(belowBlockKey, blocks, function (block) {\n      return block.merge({\n        prevSibling: originalBlockKey\n      });\n    });\n  });\n};\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n  var key = selectionState.getAnchorKey();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n  var text = blockToSplit.getText();\n  if (!text) {\n    var blockType = blockToSplit.getType();\n    if (blockType === 'unordered-list-item' || blockType === 'ordered-list-item') {\n      return modifyBlockForContentState(contentState, selectionState, function (block) {\n        return block.merge({\n          type: 'unstyled',\n          depth: 0\n        });\n      });\n    }\n  }\n  var offset = selectionState.getAnchorOffset();\n  var chars = blockToSplit.getCharacterList();\n  var keyBelow = generateRandomKey();\n  var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[key, blockAbove], [keyBelow, blockBelow]], blocksAfter).toOrderedMap();\n  if (isExperimentalTreeBlock) {\n    !blockToSplit.getChildKeys().isEmpty() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ContentBlockNode must not have children') : invariant(false) : void 0;\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\n  }\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n};\nmodule.exports = splitBlockInContentState;","map":{"version":3,"names":["ContentBlockNode","require","generateRandomKey","Immutable","invariant","modifyBlockForContentState","List","Map","transformBlock","key","blockMap","func","block","get","set","updateBlockMapLinks","originalBlock","belowBlock","withMutations","blocks","originalBlockKey","getKey","belowBlockKey","getParentKey","parentChildrenList","getChildKeys","insertionIndex","indexOf","newChildrenArray","toArray","splice","merge","children","getNextSiblingKey","prevSibling","nextSibling","splitBlockInContentState","contentState","selectionState","isCollapsed","process","env","NODE_ENV","getAnchorKey","getBlockMap","blockToSplit","text","getText","blockType","getType","type","depth","offset","getAnchorOffset","chars","getCharacterList","keyBelow","isExperimentalTreeBlock","blockAbove","slice","characterList","blockBelow","data","blocksBefore","toSeq","takeUntil","v","blocksAfter","skipUntil","rest","newBlocks","concat","toOrderedMap","isEmpty","selectionBefore","selectionAfter","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/splitBlockInContentState.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar Immutable = require(\"immutable\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar modifyBlockForContentState = require(\"./modifyBlockForContentState\");\n\nvar List = Immutable.List,\n    Map = Immutable.Map;\n\nvar transformBlock = function transformBlock(key, blockMap, func) {\n  if (!key) {\n    return;\n  }\n\n  var block = blockMap.get(key);\n\n  if (!block) {\n    return;\n  }\n\n  blockMap.set(key, func(block));\n};\n\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\n  return blockMap.withMutations(function (blocks) {\n    var originalBlockKey = originalBlock.getKey();\n    var belowBlockKey = belowBlock.getKey(); // update block parent\n\n    transformBlock(originalBlock.getParentKey(), blocks, function (block) {\n      var parentChildrenList = block.getChildKeys();\n      var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\n      var newChildrenArray = parentChildrenList.toArray();\n      newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\n      return block.merge({\n        children: List(newChildrenArray)\n      });\n    }); // update original next block\n\n    transformBlock(originalBlock.getNextSiblingKey(), blocks, function (block) {\n      return block.merge({\n        prevSibling: belowBlockKey\n      });\n    }); // update original block\n\n    transformBlock(originalBlockKey, blocks, function (block) {\n      return block.merge({\n        nextSibling: belowBlockKey\n      });\n    }); // update below block\n\n    transformBlock(belowBlockKey, blocks, function (block) {\n      return block.merge({\n        prevSibling: originalBlockKey\n      });\n    });\n  });\n};\n\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\n  !selectionState.isCollapsed() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Selection range must be collapsed.') : invariant(false) : void 0;\n  var key = selectionState.getAnchorKey();\n  var blockMap = contentState.getBlockMap();\n  var blockToSplit = blockMap.get(key);\n  var text = blockToSplit.getText();\n\n  if (!text) {\n    var blockType = blockToSplit.getType();\n\n    if (blockType === 'unordered-list-item' || blockType === 'ordered-list-item') {\n      return modifyBlockForContentState(contentState, selectionState, function (block) {\n        return block.merge({\n          type: 'unstyled',\n          depth: 0\n        });\n      });\n    }\n  }\n\n  var offset = selectionState.getAnchorOffset();\n  var chars = blockToSplit.getCharacterList();\n  var keyBelow = generateRandomKey();\n  var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\n  var blockAbove = blockToSplit.merge({\n    text: text.slice(0, offset),\n    characterList: chars.slice(0, offset)\n  });\n  var blockBelow = blockAbove.merge({\n    key: keyBelow,\n    text: text.slice(offset),\n    characterList: chars.slice(offset),\n    data: Map()\n  });\n  var blocksBefore = blockMap.toSeq().takeUntil(function (v) {\n    return v === blockToSplit;\n  });\n  var blocksAfter = blockMap.toSeq().skipUntil(function (v) {\n    return v === blockToSplit;\n  }).rest();\n  var newBlocks = blocksBefore.concat([[key, blockAbove], [keyBelow, blockBelow]], blocksAfter).toOrderedMap();\n\n  if (isExperimentalTreeBlock) {\n    !blockToSplit.getChildKeys().isEmpty() ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ContentBlockNode must not have children') : invariant(false) : void 0;\n    newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\n  }\n\n  return contentState.merge({\n    blockMap: newBlocks,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: keyBelow,\n      anchorOffset: 0,\n      focusKey: keyBelow,\n      focusOffset: 0,\n      isBackward: false\n    })\n  });\n};\n\nmodule.exports = splitBlockInContentState;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
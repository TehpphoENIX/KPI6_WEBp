{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftJsDebugLogging = require(\"./DraftJsDebugLogging\");\nvar EditorState = require(\"./EditorState\");\nvar getContentEditableContainer = require(\"./getContentEditableContainer\");\nvar getDraftEditorSelection = require(\"./getDraftEditorSelection\");\nfunction editOnSelect(editor) {\n  if (editor._blockSelectEvents || editor._latestEditorState !== editor.props.editorState) {\n    if (editor._blockSelectEvents) {\n      var _editorState = editor.props.editorState;\n      var selectionState = _editorState.getSelection();\n      DraftJsDebugLogging.logBlockedSelectionEvent({\n        // For now I don't think we need any other info\n        anonymizedDom: 'N/A',\n        extraParams: JSON.stringify({\n          stacktrace: new Error().stack\n        }),\n        selectionState: JSON.stringify(selectionState.toJS())\n      });\n    }\n    return;\n  }\n  var editorState = editor.props.editorState;\n  var documentSelection = getDraftEditorSelection(editorState, getContentEditableContainer(editor));\n  var updatedSelectionState = documentSelection.selectionState;\n  if (updatedSelectionState !== editorState.getSelection()) {\n    if (documentSelection.needsRecovery) {\n      editorState = EditorState.forceSelection(editorState, updatedSelectionState);\n    } else {\n      editorState = EditorState.acceptSelection(editorState, updatedSelectionState);\n    }\n    editor.update(editorState);\n  }\n}\nmodule.exports = editOnSelect;","map":{"version":3,"names":["DraftJsDebugLogging","require","EditorState","getContentEditableContainer","getDraftEditorSelection","editOnSelect","editor","_blockSelectEvents","_latestEditorState","props","editorState","_editorState","selectionState","getSelection","logBlockedSelectionEvent","anonymizedDom","extraParams","JSON","stringify","stacktrace","Error","stack","toJS","documentSelection","updatedSelectionState","needsRecovery","forceSelection","acceptSelection","update","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/editOnSelect.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar DraftJsDebugLogging = require(\"./DraftJsDebugLogging\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar getContentEditableContainer = require(\"./getContentEditableContainer\");\n\nvar getDraftEditorSelection = require(\"./getDraftEditorSelection\");\n\nfunction editOnSelect(editor) {\n  if (editor._blockSelectEvents || editor._latestEditorState !== editor.props.editorState) {\n    if (editor._blockSelectEvents) {\n      var _editorState = editor.props.editorState;\n\n      var selectionState = _editorState.getSelection();\n\n      DraftJsDebugLogging.logBlockedSelectionEvent({\n        // For now I don't think we need any other info\n        anonymizedDom: 'N/A',\n        extraParams: JSON.stringify({\n          stacktrace: new Error().stack\n        }),\n        selectionState: JSON.stringify(selectionState.toJS())\n      });\n    }\n\n    return;\n  }\n\n  var editorState = editor.props.editorState;\n  var documentSelection = getDraftEditorSelection(editorState, getContentEditableContainer(editor));\n  var updatedSelectionState = documentSelection.selectionState;\n\n  if (updatedSelectionState !== editorState.getSelection()) {\n    if (documentSelection.needsRecovery) {\n      editorState = EditorState.forceSelection(editorState, updatedSelectionState);\n    } else {\n      editorState = EditorState.acceptSelection(editorState, updatedSelectionState);\n    }\n\n    editor.update(editorState);\n  }\n}\n\nmodule.exports = editOnSelect;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE1D,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIE,2BAA2B,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAE1E,IAAIG,uBAAuB,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AAElE,SAASI,YAAYA,CAACC,MAAM,EAAE;EAC5B,IAAIA,MAAM,CAACC,kBAAkB,IAAID,MAAM,CAACE,kBAAkB,KAAKF,MAAM,CAACG,KAAK,CAACC,WAAW,EAAE;IACvF,IAAIJ,MAAM,CAACC,kBAAkB,EAAE;MAC7B,IAAII,YAAY,GAAGL,MAAM,CAACG,KAAK,CAACC,WAAW;MAE3C,IAAIE,cAAc,GAAGD,YAAY,CAACE,YAAY,EAAE;MAEhDb,mBAAmB,CAACc,wBAAwB,CAAC;QAC3C;QACAC,aAAa,EAAE,KAAK;QACpBC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAC;UAC1BC,UAAU,EAAE,IAAIC,KAAK,EAAE,CAACC;QAC1B,CAAC,CAAC;QACFT,cAAc,EAAEK,IAAI,CAACC,SAAS,CAACN,cAAc,CAACU,IAAI,EAAE;MACtD,CAAC,CAAC;IACJ;IAEA;EACF;EAEA,IAAIZ,WAAW,GAAGJ,MAAM,CAACG,KAAK,CAACC,WAAW;EAC1C,IAAIa,iBAAiB,GAAGnB,uBAAuB,CAACM,WAAW,EAAEP,2BAA2B,CAACG,MAAM,CAAC,CAAC;EACjG,IAAIkB,qBAAqB,GAAGD,iBAAiB,CAACX,cAAc;EAE5D,IAAIY,qBAAqB,KAAKd,WAAW,CAACG,YAAY,EAAE,EAAE;IACxD,IAAIU,iBAAiB,CAACE,aAAa,EAAE;MACnCf,WAAW,GAAGR,WAAW,CAACwB,cAAc,CAAChB,WAAW,EAAEc,qBAAqB,CAAC;IAC9E,CAAC,MAAM;MACLd,WAAW,GAAGR,WAAW,CAACyB,eAAe,CAACjB,WAAW,EAAEc,qBAAqB,CAAC;IAC/E;IAEAlB,MAAM,CAACsB,MAAM,CAAClB,WAAW,CAAC;EAC5B;AACF;AAEAmB,MAAM,CAACC,OAAO,GAAGzB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\n\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\nmodule.exports = editOnCopy;","map":{"version":3,"names":["getFragmentFromSelection","require","editOnCopy","editor","e","editorState","_latestEditorState","selection","getSelection","isCollapsed","preventDefault","setClipboard","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/editOnCopy.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\n\n\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACpE;AACA;AACA;AACA;AACA;;AAGA,SAASC,UAAUA,CAACC,MAAM,EAAEC,CAAC,EAAE;EAC7B,IAAIC,WAAW,GAAGF,MAAM,CAACG,kBAAkB;EAC3C,IAAIC,SAAS,GAAGF,WAAW,CAACG,YAAY,EAAE,CAAC,CAAC;;EAE5C,IAAID,SAAS,CAACE,WAAW,EAAE,EAAE;IAC3BL,CAAC,CAACM,cAAc,EAAE;IAClB;EACF;EAEAP,MAAM,CAACQ,YAAY,CAACX,wBAAwB,CAACG,MAAM,CAACG,kBAAkB,CAAC,CAAC;AAC1E;AAEAM,MAAM,CAACC,OAAO,GAAGX,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
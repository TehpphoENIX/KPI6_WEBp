{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teh_phoENIX\\\\source\\\\repos\\\\WEBp\\\\WEBpL1\\\\src\\\\components\\\\HTMLPlugin.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { OnChangePlugin } from \"@lexical/react/LexicalOnChangePlugin\";\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport { $generateHtmlFromNodes, $generateNodesFromDOM } from \"@lexical/html\";\nimport { $insertNodes } from \"lexical\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HtmlPlugin = _ref => {\n  _s();\n  let {\n    initialHtml,\n    onHtmlChanged\n  } = _ref;\n  const [editor] = useLexicalComposerContext();\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  useEffect(() => {\n    if (!initialHtml || !isFirstRender) return;\n    setIsFirstRender(false);\n    editor.update(() => {\n      const parser = new DOMParser();\n      const dom = parser.parseFromString(initialHtml, \"text/html\");\n      const nodes = $generateNodesFromDOM(editor, dom);\n      $insertNodes(nodes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(OnChangePlugin, {\n    onChange: editorState => {\n      editorState.read(() => {\n        onHtmlChanged($generateHtmlFromNodes(editor));\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(HtmlPlugin, \"exYoNHgmvdLYmjeYtDyMDAvmBfE=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c = HtmlPlugin;\nexport default HtmlPlugin;\nvar _c;\n$RefreshReg$(_c, \"HtmlPlugin\");","map":{"version":3,"names":["useState","useEffect","OnChangePlugin","useLexicalComposerContext","$generateHtmlFromNodes","$generateNodesFromDOM","$insertNodes","jsxDEV","_jsxDEV","HtmlPlugin","_ref","_s","initialHtml","onHtmlChanged","editor","isFirstRender","setIsFirstRender","update","parser","DOMParser","dom","parseFromString","nodes","onChange","editorState","read","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/src/components/HTMLPlugin.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { OnChangePlugin } from \"@lexical/react/LexicalOnChangePlugin\";\r\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\r\nimport { $generateHtmlFromNodes, $generateNodesFromDOM } from \"@lexical/html\";\r\nimport { $insertNodes } from \"lexical\";\r\n\r\ninterface Props {\r\n    initialHtml?: string;\r\n    onHtmlChanged: (html: string) => void;\r\n}\r\n\r\nconst HtmlPlugin = ({ initialHtml, onHtmlChanged }: Props) => {\r\n    const [editor] = useLexicalComposerContext();\r\n\r\n    const [isFirstRender, setIsFirstRender] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!initialHtml || !isFirstRender) return;\r\n\r\n        setIsFirstRender(false);\r\n\r\n        editor.update(() => {\r\n            const parser = new DOMParser();\r\n            const dom = parser.parseFromString(initialHtml, \"text/html\");\r\n            const nodes = $generateNodesFromDOM(editor, dom);\r\n            $insertNodes(nodes);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <OnChangePlugin\r\n            onChange={(editorState) => {\r\n                editorState.read(() => {\r\n                    onHtmlChanged($generateHtmlFromNodes(editor));\r\n                });\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default HtmlPlugin;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,sBAAsB,EAAEC,qBAAqB,QAAQ,eAAe;AAC7E,SAASC,YAAY,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,UAAU,GAAGC,IAAA,IAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC,WAAW;IAAEC;EAAqB,CAAC,GAAAH,IAAA;EACrD,MAAM,CAACI,MAAM,CAAC,GAAGX,yBAAyB,EAAE;EAE5C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,WAAW,IAAI,CAACG,aAAa,EAAE;IAEpCC,gBAAgB,CAAC,KAAK,CAAC;IAEvBF,MAAM,CAACG,MAAM,CAAC,MAAM;MAChB,MAAMC,MAAM,GAAG,IAAIC,SAAS,EAAE;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACT,WAAW,EAAE,WAAW,CAAC;MAC5D,MAAMU,KAAK,GAAGjB,qBAAqB,CAACS,MAAM,EAAEM,GAAG,CAAC;MAChDd,YAAY,CAACgB,KAAK,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA,CAACN,cAAc;IACXqB,QAAQ,EAAGC,WAAW,IAAK;MACvBA,WAAW,CAACC,IAAI,CAAC,MAAM;QACnBZ,aAAa,CAACT,sBAAsB,CAACU,MAAM,CAAC,CAAC;MACjD,CAAC,CAAC;IACN;EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAClB,EAAA,CA3BIF,UAAU;EAAA,QACKN,yBAAyB;AAAA;AAAA2B,EAAA,GADxCrB,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
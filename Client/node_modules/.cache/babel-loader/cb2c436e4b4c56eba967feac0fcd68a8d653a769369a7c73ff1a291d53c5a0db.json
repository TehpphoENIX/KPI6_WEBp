{"ast":null,"code":"\"use strict\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\nvar generateRandomKey = require(\"./generateRandomKey\");\nvar invariant = require(\"fbjs/lib/invariant\");\nvar traverseInDepthOrder = function traverseInDepthOrder(blocks, fn) {\n  var stack = [].concat(blocks).reverse();\n  while (stack.length) {\n    var _block = stack.pop();\n    fn(_block);\n    var children = _block.children;\n    !Array.isArray(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid tree raw block') : invariant(false) : void 0;\n    stack = stack.concat([].concat(children.reverse()));\n  }\n};\nvar isListBlock = function isListBlock(block) {\n  if (!(block && block.type)) {\n    return false;\n  }\n  var type = block.type;\n  return type === 'unordered-list-item' || type === 'ordered-list-item';\n};\nvar addDepthToChildren = function addDepthToChildren(block) {\n  if (Array.isArray(block.children)) {\n    block.children = block.children.map(function (child) {\n      return child.type === block.type ? _objectSpread({}, child, {\n        depth: (block.depth || 0) + 1\n      }) : child;\n    });\n  }\n};\n/**\n * This adapter is intended to be be used as an adapter to draft tree data\n *\n * draft state <=====> draft tree state\n */\n\nvar DraftTreeAdapter = {\n  /**\n   * Converts from a tree raw state back to draft raw state\n   */\n  fromRawTreeStateToRawState: function fromRawTreeStateToRawState(draftTreeState) {\n    var blocks = draftTreeState.blocks;\n    var transformedBlocks = [];\n    !Array.isArray(blocks) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid raw state') : invariant(false) : void 0;\n    if (!Array.isArray(blocks) || !blocks.length) {\n      return draftTreeState;\n    }\n    traverseInDepthOrder(blocks, function (block) {\n      var newBlock = _objectSpread({}, block);\n      if (isListBlock(block)) {\n        newBlock.depth = newBlock.depth || 0;\n        addDepthToChildren(block); // if it's a non-leaf node, we don't do anything else\n\n        if (block.children != null && block.children.length > 0) {\n          return;\n        }\n      }\n      delete newBlock.children;\n      transformedBlocks.push(newBlock);\n    });\n    draftTreeState.blocks = transformedBlocks;\n    return _objectSpread({}, draftTreeState, {\n      blocks: transformedBlocks\n    });\n  },\n  /**\n   * Converts from draft raw state to tree draft state\n   */\n  fromRawStateToRawTreeState: function fromRawStateToRawTreeState(draftState) {\n    var transformedBlocks = [];\n    var parentStack = [];\n    draftState.blocks.forEach(function (block) {\n      var isList = isListBlock(block);\n      var depth = block.depth || 0;\n      var treeBlock = _objectSpread({}, block, {\n        children: []\n      });\n      if (!isList) {\n        transformedBlocks.push(treeBlock);\n        return;\n      }\n      var lastParent = parentStack[0]; // block is non-nested & there are no nested blocks, directly push block\n\n      if (lastParent == null && depth === 0) {\n        transformedBlocks.push(treeBlock); // block is first nested block or previous nested block is at a lower level\n      } else if (lastParent == null || lastParent.depth < depth - 1) {\n        // create new parent block\n        var newParent = {\n          key: generateRandomKey(),\n          text: '',\n          depth: depth - 1,\n          type: block.type,\n          children: [],\n          entityRanges: [],\n          inlineStyleRanges: []\n        };\n        parentStack.unshift(newParent);\n        if (depth === 1) {\n          // add as a root-level block\n          transformedBlocks.push(newParent);\n        } else if (lastParent != null) {\n          // depth > 1 => also add as previous parent's child\n          lastParent.children.push(newParent);\n        }\n        newParent.children.push(treeBlock);\n      } else if (lastParent.depth === depth - 1) {\n        // add as child of last parent\n        lastParent.children.push(treeBlock);\n      } else {\n        // pop out parents at levels above this one from the parent stack\n        while (lastParent != null && lastParent.depth >= depth) {\n          parentStack.shift();\n          lastParent = parentStack[0];\n        }\n        if (depth > 0) {\n          lastParent.children.push(treeBlock);\n        } else {\n          transformedBlocks.push(treeBlock);\n        }\n      }\n    });\n    return _objectSpread({}, draftState, {\n      blocks: transformedBlocks\n    });\n  }\n};\nmodule.exports = DraftTreeAdapter;","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","generateRandomKey","require","invariant","traverseInDepthOrder","blocks","fn","stack","reverse","_block","pop","children","Array","isArray","process","env","NODE_ENV","isListBlock","block","type","addDepthToChildren","map","child","depth","DraftTreeAdapter","fromRawTreeStateToRawState","draftTreeState","transformedBlocks","newBlock","push","fromRawStateToRawTreeState","draftState","parentStack","isList","treeBlock","lastParent","newParent","text","entityRanges","inlineStyleRanges","unshift","shift","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/DraftTreeAdapter.js"],"sourcesContent":["\"use strict\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar traverseInDepthOrder = function traverseInDepthOrder(blocks, fn) {\n  var stack = [].concat(blocks).reverse();\n\n  while (stack.length) {\n    var _block = stack.pop();\n\n    fn(_block);\n    var children = _block.children;\n    !Array.isArray(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid tree raw block') : invariant(false) : void 0;\n    stack = stack.concat([].concat(children.reverse()));\n  }\n};\n\nvar isListBlock = function isListBlock(block) {\n  if (!(block && block.type)) {\n    return false;\n  }\n\n  var type = block.type;\n  return type === 'unordered-list-item' || type === 'ordered-list-item';\n};\n\nvar addDepthToChildren = function addDepthToChildren(block) {\n  if (Array.isArray(block.children)) {\n    block.children = block.children.map(function (child) {\n      return child.type === block.type ? _objectSpread({}, child, {\n        depth: (block.depth || 0) + 1\n      }) : child;\n    });\n  }\n};\n/**\n * This adapter is intended to be be used as an adapter to draft tree data\n *\n * draft state <=====> draft tree state\n */\n\n\nvar DraftTreeAdapter = {\n  /**\n   * Converts from a tree raw state back to draft raw state\n   */\n  fromRawTreeStateToRawState: function fromRawTreeStateToRawState(draftTreeState) {\n    var blocks = draftTreeState.blocks;\n    var transformedBlocks = [];\n    !Array.isArray(blocks) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid raw state') : invariant(false) : void 0;\n\n    if (!Array.isArray(blocks) || !blocks.length) {\n      return draftTreeState;\n    }\n\n    traverseInDepthOrder(blocks, function (block) {\n      var newBlock = _objectSpread({}, block);\n\n      if (isListBlock(block)) {\n        newBlock.depth = newBlock.depth || 0;\n        addDepthToChildren(block); // if it's a non-leaf node, we don't do anything else\n\n        if (block.children != null && block.children.length > 0) {\n          return;\n        }\n      }\n\n      delete newBlock.children;\n      transformedBlocks.push(newBlock);\n    });\n    draftTreeState.blocks = transformedBlocks;\n    return _objectSpread({}, draftTreeState, {\n      blocks: transformedBlocks\n    });\n  },\n\n  /**\n   * Converts from draft raw state to tree draft state\n   */\n  fromRawStateToRawTreeState: function fromRawStateToRawTreeState(draftState) {\n    var transformedBlocks = [];\n    var parentStack = [];\n    draftState.blocks.forEach(function (block) {\n      var isList = isListBlock(block);\n      var depth = block.depth || 0;\n\n      var treeBlock = _objectSpread({}, block, {\n        children: []\n      });\n\n      if (!isList) {\n        transformedBlocks.push(treeBlock);\n        return;\n      }\n\n      var lastParent = parentStack[0]; // block is non-nested & there are no nested blocks, directly push block\n\n      if (lastParent == null && depth === 0) {\n        transformedBlocks.push(treeBlock); // block is first nested block or previous nested block is at a lower level\n      } else if (lastParent == null || lastParent.depth < depth - 1) {\n        // create new parent block\n        var newParent = {\n          key: generateRandomKey(),\n          text: '',\n          depth: depth - 1,\n          type: block.type,\n          children: [],\n          entityRanges: [],\n          inlineStyleRanges: []\n        };\n        parentStack.unshift(newParent);\n\n        if (depth === 1) {\n          // add as a root-level block\n          transformedBlocks.push(newParent);\n        } else if (lastParent != null) {\n          // depth > 1 => also add as previous parent's child\n          lastParent.children.push(newParent);\n        }\n\n        newParent.children.push(treeBlock);\n      } else if (lastParent.depth === depth - 1) {\n        // add as child of last parent\n        lastParent.children.push(treeBlock);\n      } else {\n        // pop out parents at levels above this one from the parent stack\n        while (lastParent != null && lastParent.depth >= depth) {\n          parentStack.shift();\n          lastParent = parentStack[0];\n        }\n\n        if (depth > 0) {\n          lastParent.children.push(treeBlock);\n        } else {\n          transformedBlocks.push(treeBlock);\n        }\n      }\n    });\n    return _objectSpread({}, draftState, {\n      blocks: transformedBlocks\n    });\n  }\n};\nmodule.exports = DraftTreeAdapter;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
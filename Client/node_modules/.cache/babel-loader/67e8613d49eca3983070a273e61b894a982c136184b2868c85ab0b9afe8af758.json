{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar ContentBlock = require(\"./ContentBlock\");\nvar ContentBlockNode = require(\"./ContentBlockNode\");\nvar DraftStringKey = require(\"./DraftStringKey\");\nvar encodeEntityRanges = require(\"./encodeEntityRanges\");\nvar encodeInlineStyleRanges = require(\"./encodeInlineStyleRanges\");\nvar invariant = require(\"fbjs/lib/invariant\");\nvar createRawBlock = function createRawBlock(block, entityStorageMap) {\n  return {\n    key: block.getKey(),\n    text: block.getText(),\n    type: block.getType(),\n    depth: block.getDepth(),\n    inlineStyleRanges: encodeInlineStyleRanges(block),\n    entityRanges: encodeEntityRanges(block, entityStorageMap),\n    data: block.getData().toObject()\n  };\n};\nvar insertRawBlock = function insertRawBlock(block, entityMap, rawBlocks, blockCacheRef) {\n  if (block instanceof ContentBlock) {\n    rawBlocks.push(createRawBlock(block, entityMap));\n    return;\n  }\n  !(block instanceof ContentBlockNode) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'block is not a BlockNode') : invariant(false) : void 0;\n  var parentKey = block.getParentKey();\n  var rawBlock = blockCacheRef[block.getKey()] = _objectSpread({}, createRawBlock(block, entityMap), {\n    children: []\n  });\n  if (parentKey) {\n    blockCacheRef[parentKey].children.push(rawBlock);\n    return;\n  }\n  rawBlocks.push(rawBlock);\n};\nvar encodeRawBlocks = function encodeRawBlocks(contentState, rawState) {\n  var entityMap = rawState.entityMap;\n  var rawBlocks = [];\n  var blockCacheRef = {};\n  var entityCacheRef = {};\n  var entityStorageKey = 0;\n  contentState.getBlockMap().forEach(function (block) {\n    block.findEntityRanges(function (character) {\n      return character.getEntity() !== null;\n    }, function (start) {\n      var entityKey = block.getEntityAt(start); // Stringify to maintain order of otherwise numeric keys.\n\n      var stringifiedEntityKey = DraftStringKey.stringify(entityKey); // This makes this function resilient to two entities\n      // erroneously having the same key\n\n      if (entityCacheRef[stringifiedEntityKey]) {\n        return;\n      }\n      entityCacheRef[stringifiedEntityKey] = entityKey; // we need the `any` casting here since this is a temporary state\n      // where we will later on flip the entity map and populate it with\n      // real entity, at this stage we just need to map back the entity\n      // key used by the BlockNode\n\n      entityMap[stringifiedEntityKey] = \"\".concat(entityStorageKey);\n      entityStorageKey++;\n    });\n    insertRawBlock(block, entityMap, rawBlocks, blockCacheRef);\n  });\n  return {\n    blocks: rawBlocks,\n    entityMap: entityMap\n  };\n}; // Flip storage map so that our storage keys map to global\n// DraftEntity keys.\n\nvar encodeRawEntityMap = function encodeRawEntityMap(contentState, rawState) {\n  var blocks = rawState.blocks,\n    entityMap = rawState.entityMap;\n  var rawEntityMap = {};\n  Object.keys(entityMap).forEach(function (key, index) {\n    var entity = contentState.getEntity(DraftStringKey.unstringify(key));\n    rawEntityMap[index] = {\n      type: entity.getType(),\n      mutability: entity.getMutability(),\n      data: entity.getData()\n    };\n  });\n  return {\n    blocks: blocks,\n    entityMap: rawEntityMap\n  };\n};\nvar convertFromDraftStateToRaw = function convertFromDraftStateToRaw(contentState) {\n  var rawDraftContentState = {\n    entityMap: {},\n    blocks: []\n  }; // add blocks\n\n  rawDraftContentState = encodeRawBlocks(contentState, rawDraftContentState); // add entities\n\n  rawDraftContentState = encodeRawEntityMap(contentState, rawDraftContentState);\n  return rawDraftContentState;\n};\nmodule.exports = convertFromDraftStateToRaw;","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","ContentBlock","require","ContentBlockNode","DraftStringKey","encodeEntityRanges","encodeInlineStyleRanges","invariant","createRawBlock","block","entityStorageMap","getKey","text","getText","type","getType","depth","getDepth","inlineStyleRanges","entityRanges","data","getData","toObject","insertRawBlock","entityMap","rawBlocks","blockCacheRef","push","process","env","NODE_ENV","parentKey","getParentKey","rawBlock","children","encodeRawBlocks","contentState","rawState","entityCacheRef","entityStorageKey","getBlockMap","findEntityRanges","character","getEntity","start","entityKey","getEntityAt","stringifiedEntityKey","stringify","blocks","encodeRawEntityMap","rawEntityMap","index","entity","unstringify","mutability","getMutability","convertFromDraftStateToRaw","rawDraftContentState","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/convertFromDraftStateToRaw.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftStringKey = require(\"./DraftStringKey\");\n\nvar encodeEntityRanges = require(\"./encodeEntityRanges\");\n\nvar encodeInlineStyleRanges = require(\"./encodeInlineStyleRanges\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar createRawBlock = function createRawBlock(block, entityStorageMap) {\n  return {\n    key: block.getKey(),\n    text: block.getText(),\n    type: block.getType(),\n    depth: block.getDepth(),\n    inlineStyleRanges: encodeInlineStyleRanges(block),\n    entityRanges: encodeEntityRanges(block, entityStorageMap),\n    data: block.getData().toObject()\n  };\n};\n\nvar insertRawBlock = function insertRawBlock(block, entityMap, rawBlocks, blockCacheRef) {\n  if (block instanceof ContentBlock) {\n    rawBlocks.push(createRawBlock(block, entityMap));\n    return;\n  }\n\n  !(block instanceof ContentBlockNode) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'block is not a BlockNode') : invariant(false) : void 0;\n  var parentKey = block.getParentKey();\n\n  var rawBlock = blockCacheRef[block.getKey()] = _objectSpread({}, createRawBlock(block, entityMap), {\n    children: []\n  });\n\n  if (parentKey) {\n    blockCacheRef[parentKey].children.push(rawBlock);\n    return;\n  }\n\n  rawBlocks.push(rawBlock);\n};\n\nvar encodeRawBlocks = function encodeRawBlocks(contentState, rawState) {\n  var entityMap = rawState.entityMap;\n  var rawBlocks = [];\n  var blockCacheRef = {};\n  var entityCacheRef = {};\n  var entityStorageKey = 0;\n  contentState.getBlockMap().forEach(function (block) {\n    block.findEntityRanges(function (character) {\n      return character.getEntity() !== null;\n    }, function (start) {\n      var entityKey = block.getEntityAt(start); // Stringify to maintain order of otherwise numeric keys.\n\n      var stringifiedEntityKey = DraftStringKey.stringify(entityKey); // This makes this function resilient to two entities\n      // erroneously having the same key\n\n      if (entityCacheRef[stringifiedEntityKey]) {\n        return;\n      }\n\n      entityCacheRef[stringifiedEntityKey] = entityKey; // we need the `any` casting here since this is a temporary state\n      // where we will later on flip the entity map and populate it with\n      // real entity, at this stage we just need to map back the entity\n      // key used by the BlockNode\n\n      entityMap[stringifiedEntityKey] = \"\".concat(entityStorageKey);\n      entityStorageKey++;\n    });\n    insertRawBlock(block, entityMap, rawBlocks, blockCacheRef);\n  });\n  return {\n    blocks: rawBlocks,\n    entityMap: entityMap\n  };\n}; // Flip storage map so that our storage keys map to global\n// DraftEntity keys.\n\n\nvar encodeRawEntityMap = function encodeRawEntityMap(contentState, rawState) {\n  var blocks = rawState.blocks,\n      entityMap = rawState.entityMap;\n  var rawEntityMap = {};\n  Object.keys(entityMap).forEach(function (key, index) {\n    var entity = contentState.getEntity(DraftStringKey.unstringify(key));\n    rawEntityMap[index] = {\n      type: entity.getType(),\n      mutability: entity.getMutability(),\n      data: entity.getData()\n    };\n  });\n  return {\n    blocks: blocks,\n    entityMap: rawEntityMap\n  };\n};\n\nvar convertFromDraftStateToRaw = function convertFromDraftStateToRaw(contentState) {\n  var rawDraftContentState = {\n    entityMap: {},\n    blocks: []\n  }; // add blocks\n\n  rawDraftContentState = encodeRawBlocks(contentState, rawDraftContentState); // add entities\n\n  rawDraftContentState = encodeRawEntityMap(contentState, rawDraftContentState);\n  return rawDraftContentState;\n};\n\nmodule.exports = convertFromDraftStateToRaw;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
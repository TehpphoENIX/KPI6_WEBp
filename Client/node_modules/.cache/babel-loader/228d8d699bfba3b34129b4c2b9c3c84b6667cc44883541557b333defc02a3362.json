{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\nvar expandRangeToStartOfLine = require(\"./expandRangeToStartOfLine\");\nvar getDraftEditorSelectionWithNodes = require(\"./getDraftEditorSelectionWithNodes\");\nvar moveSelectionBackward = require(\"./moveSelectionBackward\");\nvar removeTextWithStrategy = require(\"./removeTextWithStrategy\");\nfunction keyCommandBackspaceToStartOfLine(editorState, e) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\n      return moveSelectionBackward(strategyState, 1);\n    }\n    var ownerDocument = e.currentTarget.ownerDocument;\n    var domSelection = ownerDocument.defaultView.getSelection(); // getRangeAt can technically throw if there's no selection, but we know\n    // there is one here because text editor has focus (the cursor is a\n    // selection of length 0). Therefore, we don't need to wrap this in a\n    // try-catch block.\n\n    var range = domSelection.getRangeAt(0);\n    range = expandRangeToStartOfLine(range);\n    return getDraftEditorSelectionWithNodes(strategyState, null, range.endContainer, range.endOffset, range.startContainer, range.startOffset).selectionState;\n  }, 'backward');\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\n}\nmodule.exports = keyCommandBackspaceToStartOfLine;","map":{"version":3,"names":["EditorState","require","expandRangeToStartOfLine","getDraftEditorSelectionWithNodes","moveSelectionBackward","removeTextWithStrategy","keyCommandBackspaceToStartOfLine","editorState","e","afterRemoval","strategyState","selection","getSelection","isCollapsed","getAnchorOffset","ownerDocument","currentTarget","domSelection","defaultView","range","getRangeAt","endContainer","endOffset","startContainer","startOffset","selectionState","getCurrentContent","push","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\n\nvar expandRangeToStartOfLine = require(\"./expandRangeToStartOfLine\");\n\nvar getDraftEditorSelectionWithNodes = require(\"./getDraftEditorSelectionWithNodes\");\n\nvar moveSelectionBackward = require(\"./moveSelectionBackward\");\n\nvar removeTextWithStrategy = require(\"./removeTextWithStrategy\");\n\nfunction keyCommandBackspaceToStartOfLine(editorState, e) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n\n    if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\n      return moveSelectionBackward(strategyState, 1);\n    }\n\n    var ownerDocument = e.currentTarget.ownerDocument;\n    var domSelection = ownerDocument.defaultView.getSelection(); // getRangeAt can technically throw if there's no selection, but we know\n    // there is one here because text editor has focus (the cursor is a\n    // selection of length 0). Therefore, we don't need to wrap this in a\n    // try-catch block.\n\n    var range = domSelection.getRangeAt(0);\n    range = expandRangeToStartOfLine(range);\n    return getDraftEditorSelectionWithNodes(strategyState, null, range.endContainer, range.endOffset, range.startContainer, range.startOffset).selectionState;\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\n}\n\nmodule.exports = keyCommandBackspaceToStartOfLine;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIC,wBAAwB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAEpE,IAAIE,gCAAgC,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAEpF,IAAIG,qBAAqB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAE9D,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;AAEhE,SAASK,gCAAgCA,CAACC,WAAW,EAAEC,CAAC,EAAE;EACxD,IAAIC,YAAY,GAAGJ,sBAAsB,CAACE,WAAW,EAAE,UAAUG,aAAa,EAAE;IAC9E,IAAIC,SAAS,GAAGD,aAAa,CAACE,YAAY,EAAE;IAE5C,IAAID,SAAS,CAACE,WAAW,EAAE,IAAIF,SAAS,CAACG,eAAe,EAAE,KAAK,CAAC,EAAE;MAChE,OAAOV,qBAAqB,CAACM,aAAa,EAAE,CAAC,CAAC;IAChD;IAEA,IAAIK,aAAa,GAAGP,CAAC,CAACQ,aAAa,CAACD,aAAa;IACjD,IAAIE,YAAY,GAAGF,aAAa,CAACG,WAAW,CAACN,YAAY,EAAE,CAAC,CAAC;IAC7D;IACA;IACA;;IAEA,IAAIO,KAAK,GAAGF,YAAY,CAACG,UAAU,CAAC,CAAC,CAAC;IACtCD,KAAK,GAAGjB,wBAAwB,CAACiB,KAAK,CAAC;IACvC,OAAOhB,gCAAgC,CAACO,aAAa,EAAE,IAAI,EAAES,KAAK,CAACE,YAAY,EAAEF,KAAK,CAACG,SAAS,EAAEH,KAAK,CAACI,cAAc,EAAEJ,KAAK,CAACK,WAAW,CAAC,CAACC,cAAc;EAC3J,CAAC,EAAE,UAAU,CAAC;EAEd,IAAIhB,YAAY,KAAKF,WAAW,CAACmB,iBAAiB,EAAE,EAAE;IACpD,OAAOnB,WAAW;EACpB;EAEA,OAAOP,WAAW,CAAC2B,IAAI,CAACpB,WAAW,EAAEE,YAAY,EAAE,cAAc,CAAC;AACpE;AAEAmB,MAAM,CAACC,OAAO,GAAGvB,gCAAgC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
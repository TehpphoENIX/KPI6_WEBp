{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar randomizeBlockMapKeys = require(\"./randomizeBlockMapKeys\");\nvar removeEntitiesAtEdges = require(\"./removeEntitiesAtEdges\");\nvar getContentStateFragment = function getContentStateFragment(contentState, selectionState) {\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset(); // Edge entities should be stripped to ensure that we don't preserve\n  // invalid partial entities when the fragment is reused. We do, however,\n  // preserve entities that are entirely within the selection range.\n\n  var contentWithoutEdgeEntities = removeEntitiesAtEdges(contentState, selectionState);\n  var blockMap = contentWithoutEdgeEntities.getBlockMap();\n  var blockKeys = blockMap.keySeq();\n  var startIndex = blockKeys.indexOf(startKey);\n  var endIndex = blockKeys.indexOf(endKey) + 1;\n  return randomizeBlockMapKeys(blockMap.slice(startIndex, endIndex).map(function (block, blockKey) {\n    var text = block.getText();\n    var chars = block.getCharacterList();\n    if (startKey === endKey) {\n      return block.merge({\n        text: text.slice(startOffset, endOffset),\n        characterList: chars.slice(startOffset, endOffset)\n      });\n    }\n    if (blockKey === startKey) {\n      return block.merge({\n        text: text.slice(startOffset),\n        characterList: chars.slice(startOffset)\n      });\n    }\n    if (blockKey === endKey) {\n      return block.merge({\n        text: text.slice(0, endOffset),\n        characterList: chars.slice(0, endOffset)\n      });\n    }\n    return block;\n  }));\n};\nmodule.exports = getContentStateFragment;","map":{"version":3,"names":["randomizeBlockMapKeys","require","removeEntitiesAtEdges","getContentStateFragment","contentState","selectionState","startKey","getStartKey","startOffset","getStartOffset","endKey","getEndKey","endOffset","getEndOffset","contentWithoutEdgeEntities","blockMap","getBlockMap","blockKeys","keySeq","startIndex","indexOf","endIndex","slice","map","block","blockKey","text","getText","chars","getCharacterList","merge","characterList","module","exports"],"sources":["C:/Users/Teh_phoENIX/source/repos/WEBp/WEBpL1/node_modules/draft-js/lib/getContentStateFragment.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar randomizeBlockMapKeys = require(\"./randomizeBlockMapKeys\");\n\nvar removeEntitiesAtEdges = require(\"./removeEntitiesAtEdges\");\n\nvar getContentStateFragment = function getContentStateFragment(contentState, selectionState) {\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset(); // Edge entities should be stripped to ensure that we don't preserve\n  // invalid partial entities when the fragment is reused. We do, however,\n  // preserve entities that are entirely within the selection range.\n\n  var contentWithoutEdgeEntities = removeEntitiesAtEdges(contentState, selectionState);\n  var blockMap = contentWithoutEdgeEntities.getBlockMap();\n  var blockKeys = blockMap.keySeq();\n  var startIndex = blockKeys.indexOf(startKey);\n  var endIndex = blockKeys.indexOf(endKey) + 1;\n  return randomizeBlockMapKeys(blockMap.slice(startIndex, endIndex).map(function (block, blockKey) {\n    var text = block.getText();\n    var chars = block.getCharacterList();\n\n    if (startKey === endKey) {\n      return block.merge({\n        text: text.slice(startOffset, endOffset),\n        characterList: chars.slice(startOffset, endOffset)\n      });\n    }\n\n    if (blockKey === startKey) {\n      return block.merge({\n        text: text.slice(startOffset),\n        characterList: chars.slice(startOffset)\n      });\n    }\n\n    if (blockKey === endKey) {\n      return block.merge({\n        text: text.slice(0, endOffset),\n        characterList: chars.slice(0, endOffset)\n      });\n    }\n\n    return block;\n  }));\n};\n\nmodule.exports = getContentStateFragment;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,qBAAqB,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAE9D,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAE9D,IAAIE,uBAAuB,GAAG,SAASA,uBAAuBA,CAACC,YAAY,EAAEC,cAAc,EAAE;EAC3F,IAAIC,QAAQ,GAAGD,cAAc,CAACE,WAAW,EAAE;EAC3C,IAAIC,WAAW,GAAGH,cAAc,CAACI,cAAc,EAAE;EACjD,IAAIC,MAAM,GAAGL,cAAc,CAACM,SAAS,EAAE;EACvC,IAAIC,SAAS,GAAGP,cAAc,CAACQ,YAAY,EAAE,CAAC,CAAC;EAC/C;EACA;;EAEA,IAAIC,0BAA0B,GAAGZ,qBAAqB,CAACE,YAAY,EAAEC,cAAc,CAAC;EACpF,IAAIU,QAAQ,GAAGD,0BAA0B,CAACE,WAAW,EAAE;EACvD,IAAIC,SAAS,GAAGF,QAAQ,CAACG,MAAM,EAAE;EACjC,IAAIC,UAAU,GAAGF,SAAS,CAACG,OAAO,CAACd,QAAQ,CAAC;EAC5C,IAAIe,QAAQ,GAAGJ,SAAS,CAACG,OAAO,CAACV,MAAM,CAAC,GAAG,CAAC;EAC5C,OAAOV,qBAAqB,CAACe,QAAQ,CAACO,KAAK,CAACH,UAAU,EAAEE,QAAQ,CAAC,CAACE,GAAG,CAAC,UAAUC,KAAK,EAAEC,QAAQ,EAAE;IAC/F,IAAIC,IAAI,GAAGF,KAAK,CAACG,OAAO,EAAE;IAC1B,IAAIC,KAAK,GAAGJ,KAAK,CAACK,gBAAgB,EAAE;IAEpC,IAAIvB,QAAQ,KAAKI,MAAM,EAAE;MACvB,OAAOc,KAAK,CAACM,KAAK,CAAC;QACjBJ,IAAI,EAAEA,IAAI,CAACJ,KAAK,CAACd,WAAW,EAAEI,SAAS,CAAC;QACxCmB,aAAa,EAAEH,KAAK,CAACN,KAAK,CAACd,WAAW,EAAEI,SAAS;MACnD,CAAC,CAAC;IACJ;IAEA,IAAIa,QAAQ,KAAKnB,QAAQ,EAAE;MACzB,OAAOkB,KAAK,CAACM,KAAK,CAAC;QACjBJ,IAAI,EAAEA,IAAI,CAACJ,KAAK,CAACd,WAAW,CAAC;QAC7BuB,aAAa,EAAEH,KAAK,CAACN,KAAK,CAACd,WAAW;MACxC,CAAC,CAAC;IACJ;IAEA,IAAIiB,QAAQ,KAAKf,MAAM,EAAE;MACvB,OAAOc,KAAK,CAACM,KAAK,CAAC;QACjBJ,IAAI,EAAEA,IAAI,CAACJ,KAAK,CAAC,CAAC,EAAEV,SAAS,CAAC;QAC9BmB,aAAa,EAAEH,KAAK,CAACN,KAAK,CAAC,CAAC,EAAEV,SAAS;MACzC,CAAC,CAAC;IACJ;IAEA,OAAOY,KAAK;EACd,CAAC,CAAC,CAAC;AACL,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAG9B,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}